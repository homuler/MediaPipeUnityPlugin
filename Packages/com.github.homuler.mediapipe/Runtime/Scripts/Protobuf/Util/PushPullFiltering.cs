// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mediapipe/util/tracking/push_pull_filtering.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mediapipe {

  /// <summary>Holder for reflection information generated from mediapipe/util/tracking/push_pull_filtering.proto</summary>
  public static partial class PushPullFilteringReflection {

    #region Descriptor
    /// <summary>File descriptor for mediapipe/util/tracking/push_pull_filtering.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PushPullFilteringReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjFtZWRpYXBpcGUvdXRpbC90cmFja2luZy9wdXNoX3B1bGxfZmlsdGVyaW5n",
            "LnByb3RvEgltZWRpYXBpcGUiwAEKD1B1c2hQdWxsT3B0aW9ucxIbCg9iaWxh",
            "dGVyYWxfc2lnbWEYASABKAI6AjIwEiEKFnB1bGxfcHJvcGFnYXRpb25fc2Nh",
            "bGUYAyABKAI6ATgSIQoWcHVzaF9wcm9wYWdhdGlvbl9zY2FsZRgEIAEoAjoB",
            "OBIhChRwdWxsX2JpbGF0ZXJhbF9zY2FsZRgFIAEoAjoDMC43EiEKFHB1c2hf",
            "YmlsYXRlcmFsX3NjYWxlGAYgASgCOgMwLjkqBAgCEAM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mediapipe.PushPullOptions), global::Mediapipe.PushPullOptions.Parser, new[]{ "BilateralSigma", "PullPropagationScale", "PushPropagationScale", "PullBilateralScale", "PushBilateralScale" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PushPullOptions : pb::IExtendableMessage<PushPullOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PushPullOptions> _parser = new pb::MessageParser<PushPullOptions>(() => new PushPullOptions());
    private pb::UnknownFieldSet _unknownFields;
    private pb::ExtensionSet<PushPullOptions> _extensions;
    private pb::ExtensionSet<PushPullOptions> _Extensions { get { return _extensions; } }
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PushPullOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mediapipe.PushPullFilteringReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PushPullOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PushPullOptions(PushPullOptions other) : this() {
      _hasBits0 = other._hasBits0;
      bilateralSigma_ = other.bilateralSigma_;
      pullPropagationScale_ = other.pullPropagationScale_;
      pushPropagationScale_ = other.pushPropagationScale_;
      pullBilateralScale_ = other.pullBilateralScale_;
      pushBilateralScale_ = other.pushBilateralScale_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      _extensions = pb::ExtensionSet.Clone(other._extensions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PushPullOptions Clone() {
      return new PushPullOptions(this);
    }

    /// <summary>Field number for the "bilateral_sigma" field.</summary>
    public const int BilateralSigmaFieldNumber = 1;
    private readonly static float BilateralSigmaDefaultValue = 20F;

    private float bilateralSigma_;
    /// <summary>
    /// Sigma for color difference.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BilateralSigma {
      get { if ((_hasBits0 & 1) != 0) { return bilateralSigma_; } else { return BilateralSigmaDefaultValue; } }
      set {
        _hasBits0 |= 1;
        bilateralSigma_ = value;
      }
    }
    /// <summary>Gets whether the "bilateral_sigma" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBilateralSigma {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "bilateral_sigma" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBilateralSigma() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "pull_propagation_scale" field.</summary>
    public const int PullPropagationScaleFieldNumber = 3;
    private readonly static float PullPropagationScaleDefaultValue = 8F;

    private float pullPropagationScale_;
    /// <summary>
    /// Determines how fast confident values can propagate. Filters are normalized,
    /// such that confidence dissipates quickly instead of propagating.
    /// To ensure confidence propagates the importance weight is scaled by the
    /// scalars specified below. Larger values yield quicker propagation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PullPropagationScale {
      get { if ((_hasBits0 & 2) != 0) { return pullPropagationScale_; } else { return PullPropagationScaleDefaultValue; } }
      set {
        _hasBits0 |= 2;
        pullPropagationScale_ = value;
      }
    }
    /// <summary>Gets whether the "pull_propagation_scale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPullPropagationScale {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "pull_propagation_scale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPullPropagationScale() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "push_propagation_scale" field.</summary>
    public const int PushPropagationScaleFieldNumber = 4;
    private readonly static float PushPropagationScaleDefaultValue = 8F;

    private float pushPropagationScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PushPropagationScale {
      get { if ((_hasBits0 & 4) != 0) { return pushPropagationScale_; } else { return PushPropagationScaleDefaultValue; } }
      set {
        _hasBits0 |= 4;
        pushPropagationScale_ = value;
      }
    }
    /// <summary>Gets whether the "push_propagation_scale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPushPropagationScale {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "push_propagation_scale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPushPropagationScale() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "pull_bilateral_scale" field.</summary>
    public const int PullBilateralScaleFieldNumber = 5;
    private readonly static float PullBilateralScaleDefaultValue = 0.7F;

    private float pullBilateralScale_;
    /// <summary>
    /// Above bilateral sigma is scaled at each level by the specified scale
    /// (for push and pull phase). This is due to iterative downsampling of the
    /// guidance image introduces errors making bilateral weighting increasingly
    /// errorneous.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PullBilateralScale {
      get { if ((_hasBits0 & 8) != 0) { return pullBilateralScale_; } else { return PullBilateralScaleDefaultValue; } }
      set {
        _hasBits0 |= 8;
        pullBilateralScale_ = value;
      }
    }
    /// <summary>Gets whether the "pull_bilateral_scale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPullBilateralScale {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "pull_bilateral_scale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPullBilateralScale() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "push_bilateral_scale" field.</summary>
    public const int PushBilateralScaleFieldNumber = 6;
    private readonly static float PushBilateralScaleDefaultValue = 0.9F;

    private float pushBilateralScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PushBilateralScale {
      get { if ((_hasBits0 & 16) != 0) { return pushBilateralScale_; } else { return PushBilateralScaleDefaultValue; } }
      set {
        _hasBits0 |= 16;
        pushBilateralScale_ = value;
      }
    }
    /// <summary>Gets whether the "push_bilateral_scale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPushBilateralScale {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "push_bilateral_scale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPushBilateralScale() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PushPullOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PushPullOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BilateralSigma, other.BilateralSigma)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PullPropagationScale, other.PullPropagationScale)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PushPropagationScale, other.PushPropagationScale)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PullBilateralScale, other.PullBilateralScale)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PushBilateralScale, other.PushBilateralScale)) return false;
      if (!Equals(_extensions, other._extensions)) {
        return false;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBilateralSigma) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BilateralSigma);
      if (HasPullPropagationScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PullPropagationScale);
      if (HasPushPropagationScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PushPropagationScale);
      if (HasPullBilateralScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PullBilateralScale);
      if (HasPushBilateralScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PushBilateralScale);
      if (_extensions != null) {
        hash ^= _extensions.GetHashCode();
      }
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBilateralSigma) {
        output.WriteRawTag(13);
        output.WriteFloat(BilateralSigma);
      }
      if (HasPullPropagationScale) {
        output.WriteRawTag(29);
        output.WriteFloat(PullPropagationScale);
      }
      if (HasPushPropagationScale) {
        output.WriteRawTag(37);
        output.WriteFloat(PushPropagationScale);
      }
      if (HasPullBilateralScale) {
        output.WriteRawTag(45);
        output.WriteFloat(PullBilateralScale);
      }
      if (HasPushBilateralScale) {
        output.WriteRawTag(53);
        output.WriteFloat(PushBilateralScale);
      }
      if (_extensions != null) {
        _extensions.WriteTo(output);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBilateralSigma) {
        output.WriteRawTag(13);
        output.WriteFloat(BilateralSigma);
      }
      if (HasPullPropagationScale) {
        output.WriteRawTag(29);
        output.WriteFloat(PullPropagationScale);
      }
      if (HasPushPropagationScale) {
        output.WriteRawTag(37);
        output.WriteFloat(PushPropagationScale);
      }
      if (HasPullBilateralScale) {
        output.WriteRawTag(45);
        output.WriteFloat(PullBilateralScale);
      }
      if (HasPushBilateralScale) {
        output.WriteRawTag(53);
        output.WriteFloat(PushBilateralScale);
      }
      if (_extensions != null) {
        _extensions.WriteTo(ref output);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBilateralSigma) {
        size += 1 + 4;
      }
      if (HasPullPropagationScale) {
        size += 1 + 4;
      }
      if (HasPushPropagationScale) {
        size += 1 + 4;
      }
      if (HasPullBilateralScale) {
        size += 1 + 4;
      }
      if (HasPushBilateralScale) {
        size += 1 + 4;
      }
      if (_extensions != null) {
        size += _extensions.CalculateSize();
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PushPullOptions other) {
      if (other == null) {
        return;
      }
      if (other.HasBilateralSigma) {
        BilateralSigma = other.BilateralSigma;
      }
      if (other.HasPullPropagationScale) {
        PullPropagationScale = other.PullPropagationScale;
      }
      if (other.HasPushPropagationScale) {
        PushPropagationScale = other.PushPropagationScale;
      }
      if (other.HasPullBilateralScale) {
        PullBilateralScale = other.PullBilateralScale;
      }
      if (other.HasPushBilateralScale) {
        PushBilateralScale = other.PushBilateralScale;
      }
      pb::ExtensionSet.MergeFrom(ref _extensions, other._extensions);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, input)) {
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            }
            break;
          case 13: {
            BilateralSigma = input.ReadFloat();
            break;
          }
          case 29: {
            PullPropagationScale = input.ReadFloat();
            break;
          }
          case 37: {
            PushPropagationScale = input.ReadFloat();
            break;
          }
          case 45: {
            PullBilateralScale = input.ReadFloat();
            break;
          }
          case 53: {
            PushBilateralScale = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, ref input)) {
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            }
            break;
          case 13: {
            BilateralSigma = input.ReadFloat();
            break;
          }
          case 29: {
            PullPropagationScale = input.ReadFloat();
            break;
          }
          case 37: {
            PushPropagationScale = input.ReadFloat();
            break;
          }
          case 45: {
            PullBilateralScale = input.ReadFloat();
            break;
          }
          case 53: {
            PushBilateralScale = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

    public TValue GetExtension<TValue>(pb::Extension<PushPullOptions, TValue> extension) {
      return pb::ExtensionSet.Get(ref _extensions, extension);
    }
    public pbc::RepeatedField<TValue> GetExtension<TValue>(pb::RepeatedExtension<PushPullOptions, TValue> extension) {
      return pb::ExtensionSet.Get(ref _extensions, extension);
    }
    public pbc::RepeatedField<TValue> GetOrInitializeExtension<TValue>(pb::RepeatedExtension<PushPullOptions, TValue> extension) {
      return pb::ExtensionSet.GetOrInitialize(ref _extensions, extension);
    }
    public void SetExtension<TValue>(pb::Extension<PushPullOptions, TValue> extension, TValue value) {
      pb::ExtensionSet.Set(ref _extensions, extension, value);
    }
    public bool HasExtension<TValue>(pb::Extension<PushPullOptions, TValue> extension) {
      return pb::ExtensionSet.Has(ref _extensions, extension);
    }
    public void ClearExtension<TValue>(pb::Extension<PushPullOptions, TValue> extension) {
      pb::ExtensionSet.Clear(ref _extensions, extension);
    }
    public void ClearExtension<TValue>(pb::RepeatedExtension<PushPullOptions, TValue> extension) {
      pb::ExtensionSet.Clear(ref _extensions, extension);
    }

  }

  #endregion

}

#endregion Designer generated code
