// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mediapipe/util/audio_decoder.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mediapipe {

  /// <summary>Holder for reflection information generated from mediapipe/util/audio_decoder.proto</summary>
  public static partial class AudioDecoderReflection {

    #region Descriptor
    /// <summary>File descriptor for mediapipe/util/audio_decoder.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AudioDecoderReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJtZWRpYXBpcGUvdXRpbC9hdWRpb19kZWNvZGVyLnByb3RvEgltZWRpYXBp",
            "cGUaJG1lZGlhcGlwZS9mcmFtZXdvcmsvY2FsY3VsYXRvci5wcm90byLBAQoS",
            "QXVkaW9TdHJlYW1PcHRpb25zEhcKDHN0cmVhbV9pbmRleBgBIAEoAzoBMBIc",
            "Cg1hbGxvd19taXNzaW5nGAIgASgIOgVmYWxzZRIlChZpZ25vcmVfZGVjb2Rl",
            "X2ZhaWx1cmVzGAMgASgIOgVmYWxzZRIrChxvdXRwdXRfcmVncmVzc2luZ190",
            "aW1lc3RhbXBzGAQgASgIOgVmYWxzZRIgChhjb3JyZWN0X3B0c19mb3Jfcm9s",
            "bG92ZXIYBSABKAgivgEKE0F1ZGlvRGVjb2Rlck9wdGlvbnMSMwoMYXVkaW9f",
            "c3RyZWFtGAEgAygLMh0ubWVkaWFwaXBlLkF1ZGlvU3RyZWFtT3B0aW9ucxIS",
            "CgpzdGFydF90aW1lGAIgASgBEhAKCGVuZF90aW1lGAMgASgBMkwKA2V4dBIc",
            "Lm1lZGlhcGlwZS5DYWxjdWxhdG9yT3B0aW9ucxiy78p9IAEoCzIeLm1lZGlh",
            "cGlwZS5BdWRpb0RlY29kZXJPcHRpb25z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Mediapipe.CalculatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mediapipe.AudioStreamOptions), global::Mediapipe.AudioStreamOptions.Parser, new[]{ "StreamIndex", "AllowMissing", "IgnoreDecodeFailures", "OutputRegressingTimestamps", "CorrectPtsForRollover" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mediapipe.AudioDecoderOptions), global::Mediapipe.AudioDecoderOptions.Parser, new[]{ "AudioStream", "StartTime", "EndTime" }, null, null, new pb::Extension[] { global::Mediapipe.AudioDecoderOptions.Extensions.Ext }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AudioStreamOptions : pb::IMessage<AudioStreamOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AudioStreamOptions> _parser = new pb::MessageParser<AudioStreamOptions>(() => new AudioStreamOptions());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AudioStreamOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mediapipe.AudioDecoderReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioStreamOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioStreamOptions(AudioStreamOptions other) : this() {
      _hasBits0 = other._hasBits0;
      streamIndex_ = other.streamIndex_;
      allowMissing_ = other.allowMissing_;
      ignoreDecodeFailures_ = other.ignoreDecodeFailures_;
      outputRegressingTimestamps_ = other.outputRegressingTimestamps_;
      correctPtsForRollover_ = other.correctPtsForRollover_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioStreamOptions Clone() {
      return new AudioStreamOptions(this);
    }

    /// <summary>Field number for the "stream_index" field.</summary>
    public const int StreamIndexFieldNumber = 1;
    private readonly static long StreamIndexDefaultValue = 0L;

    private long streamIndex_;
    /// <summary>
    /// The stream to decode.  Stream indexes start from 0 (audio and video
    /// are handled separately).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StreamIndex {
      get { if ((_hasBits0 & 1) != 0) { return streamIndex_; } else { return StreamIndexDefaultValue; } }
      set {
        _hasBits0 |= 1;
        streamIndex_ = value;
      }
    }
    /// <summary>Gets whether the "stream_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStreamIndex {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "stream_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStreamIndex() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "allow_missing" field.</summary>
    public const int AllowMissingFieldNumber = 2;
    private readonly static bool AllowMissingDefaultValue = false;

    private bool allowMissing_;
    /// <summary>
    /// Process the file despite this stream not being present.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AllowMissing {
      get { if ((_hasBits0 & 2) != 0) { return allowMissing_; } else { return AllowMissingDefaultValue; } }
      set {
        _hasBits0 |= 2;
        allowMissing_ = value;
      }
    }
    /// <summary>Gets whether the "allow_missing" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAllowMissing {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "allow_missing" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAllowMissing() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "ignore_decode_failures" field.</summary>
    public const int IgnoreDecodeFailuresFieldNumber = 3;
    private readonly static bool IgnoreDecodeFailuresDefaultValue = false;

    private bool ignoreDecodeFailures_;
    /// <summary>
    /// If true, failures to decode a frame of data will be ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IgnoreDecodeFailures {
      get { if ((_hasBits0 & 4) != 0) { return ignoreDecodeFailures_; } else { return IgnoreDecodeFailuresDefaultValue; } }
      set {
        _hasBits0 |= 4;
        ignoreDecodeFailures_ = value;
      }
    }
    /// <summary>Gets whether the "ignore_decode_failures" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIgnoreDecodeFailures {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ignore_decode_failures" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIgnoreDecodeFailures() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "output_regressing_timestamps" field.</summary>
    public const int OutputRegressingTimestampsFieldNumber = 4;
    private readonly static bool OutputRegressingTimestampsDefaultValue = false;

    private bool outputRegressingTimestamps_;
    /// <summary>
    /// Output packets with regressing timestamps. By default those packets are
    /// dropped.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OutputRegressingTimestamps {
      get { if ((_hasBits0 & 8) != 0) { return outputRegressingTimestamps_; } else { return OutputRegressingTimestampsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        outputRegressingTimestamps_ = value;
      }
    }
    /// <summary>Gets whether the "output_regressing_timestamps" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOutputRegressingTimestamps {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "output_regressing_timestamps" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOutputRegressingTimestamps() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "correct_pts_for_rollover" field.</summary>
    public const int CorrectPtsForRolloverFieldNumber = 5;
    private readonly static bool CorrectPtsForRolloverDefaultValue = false;

    private bool correctPtsForRollover_;
    /// <summary>
    /// MPEG PTS timestamps roll over back to 0 after 26.5h. If this flag is set
    /// we detect any rollover and continue incrementing timestamps past this
    /// point. Set this flag if you want non-regressing timestamps for MPEG
    /// content where the PTS may roll over.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CorrectPtsForRollover {
      get { if ((_hasBits0 & 16) != 0) { return correctPtsForRollover_; } else { return CorrectPtsForRolloverDefaultValue; } }
      set {
        _hasBits0 |= 16;
        correctPtsForRollover_ = value;
      }
    }
    /// <summary>Gets whether the "correct_pts_for_rollover" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCorrectPtsForRollover {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "correct_pts_for_rollover" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCorrectPtsForRollover() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AudioStreamOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AudioStreamOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StreamIndex != other.StreamIndex) return false;
      if (AllowMissing != other.AllowMissing) return false;
      if (IgnoreDecodeFailures != other.IgnoreDecodeFailures) return false;
      if (OutputRegressingTimestamps != other.OutputRegressingTimestamps) return false;
      if (CorrectPtsForRollover != other.CorrectPtsForRollover) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStreamIndex) hash ^= StreamIndex.GetHashCode();
      if (HasAllowMissing) hash ^= AllowMissing.GetHashCode();
      if (HasIgnoreDecodeFailures) hash ^= IgnoreDecodeFailures.GetHashCode();
      if (HasOutputRegressingTimestamps) hash ^= OutputRegressingTimestamps.GetHashCode();
      if (HasCorrectPtsForRollover) hash ^= CorrectPtsForRollover.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasStreamIndex) {
        output.WriteRawTag(8);
        output.WriteInt64(StreamIndex);
      }
      if (HasAllowMissing) {
        output.WriteRawTag(16);
        output.WriteBool(AllowMissing);
      }
      if (HasIgnoreDecodeFailures) {
        output.WriteRawTag(24);
        output.WriteBool(IgnoreDecodeFailures);
      }
      if (HasOutputRegressingTimestamps) {
        output.WriteRawTag(32);
        output.WriteBool(OutputRegressingTimestamps);
      }
      if (HasCorrectPtsForRollover) {
        output.WriteRawTag(40);
        output.WriteBool(CorrectPtsForRollover);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasStreamIndex) {
        output.WriteRawTag(8);
        output.WriteInt64(StreamIndex);
      }
      if (HasAllowMissing) {
        output.WriteRawTag(16);
        output.WriteBool(AllowMissing);
      }
      if (HasIgnoreDecodeFailures) {
        output.WriteRawTag(24);
        output.WriteBool(IgnoreDecodeFailures);
      }
      if (HasOutputRegressingTimestamps) {
        output.WriteRawTag(32);
        output.WriteBool(OutputRegressingTimestamps);
      }
      if (HasCorrectPtsForRollover) {
        output.WriteRawTag(40);
        output.WriteBool(CorrectPtsForRollover);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasStreamIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StreamIndex);
      }
      if (HasAllowMissing) {
        size += 1 + 1;
      }
      if (HasIgnoreDecodeFailures) {
        size += 1 + 1;
      }
      if (HasOutputRegressingTimestamps) {
        size += 1 + 1;
      }
      if (HasCorrectPtsForRollover) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AudioStreamOptions other) {
      if (other == null) {
        return;
      }
      if (other.HasStreamIndex) {
        StreamIndex = other.StreamIndex;
      }
      if (other.HasAllowMissing) {
        AllowMissing = other.AllowMissing;
      }
      if (other.HasIgnoreDecodeFailures) {
        IgnoreDecodeFailures = other.IgnoreDecodeFailures;
      }
      if (other.HasOutputRegressingTimestamps) {
        OutputRegressingTimestamps = other.OutputRegressingTimestamps;
      }
      if (other.HasCorrectPtsForRollover) {
        CorrectPtsForRollover = other.CorrectPtsForRollover;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StreamIndex = input.ReadInt64();
            break;
          }
          case 16: {
            AllowMissing = input.ReadBool();
            break;
          }
          case 24: {
            IgnoreDecodeFailures = input.ReadBool();
            break;
          }
          case 32: {
            OutputRegressingTimestamps = input.ReadBool();
            break;
          }
          case 40: {
            CorrectPtsForRollover = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StreamIndex = input.ReadInt64();
            break;
          }
          case 16: {
            AllowMissing = input.ReadBool();
            break;
          }
          case 24: {
            IgnoreDecodeFailures = input.ReadBool();
            break;
          }
          case 32: {
            OutputRegressingTimestamps = input.ReadBool();
            break;
          }
          case 40: {
            CorrectPtsForRollover = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AudioDecoderOptions : pb::IMessage<AudioDecoderOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AudioDecoderOptions> _parser = new pb::MessageParser<AudioDecoderOptions>(() => new AudioDecoderOptions());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AudioDecoderOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mediapipe.AudioDecoderReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioDecoderOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioDecoderOptions(AudioDecoderOptions other) : this() {
      _hasBits0 = other._hasBits0;
      audioStream_ = other.audioStream_.Clone();
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioDecoderOptions Clone() {
      return new AudioDecoderOptions(this);
    }

    /// <summary>Field number for the "audio_stream" field.</summary>
    public const int AudioStreamFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Mediapipe.AudioStreamOptions> _repeated_audioStream_codec
        = pb::FieldCodec.ForMessage(10, global::Mediapipe.AudioStreamOptions.Parser);
    private readonly pbc::RepeatedField<global::Mediapipe.AudioStreamOptions> audioStream_ = new pbc::RepeatedField<global::Mediapipe.AudioStreamOptions>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Mediapipe.AudioStreamOptions> AudioStream {
      get { return audioStream_; }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private readonly static double StartTimeDefaultValue = 0D;

    private double startTime_;
    /// <summary>
    /// The start time in seconds to decode.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double StartTime {
      get { if ((_hasBits0 & 1) != 0) { return startTime_; } else { return StartTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        startTime_ = value;
      }
    }
    /// <summary>Gets whether the "start_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "start_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartTime() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 3;
    private readonly static double EndTimeDefaultValue = 0D;

    private double endTime_;
    /// <summary>
    /// The end time in seconds to decode (inclusive).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double EndTime {
      get { if ((_hasBits0 & 2) != 0) { return endTime_; } else { return EndTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        endTime_ = value;
      }
    }
    /// <summary>Gets whether the "end_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "end_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndTime() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AudioDecoderOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AudioDecoderOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!audioStream_.Equals(other.audioStream_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(StartTime, other.StartTime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(EndTime, other.EndTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= audioStream_.GetHashCode();
      if (HasStartTime) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(StartTime);
      if (HasEndTime) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(EndTime);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      audioStream_.WriteTo(output, _repeated_audioStream_codec);
      if (HasStartTime) {
        output.WriteRawTag(17);
        output.WriteDouble(StartTime);
      }
      if (HasEndTime) {
        output.WriteRawTag(25);
        output.WriteDouble(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      audioStream_.WriteTo(ref output, _repeated_audioStream_codec);
      if (HasStartTime) {
        output.WriteRawTag(17);
        output.WriteDouble(StartTime);
      }
      if (HasEndTime) {
        output.WriteRawTag(25);
        output.WriteDouble(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += audioStream_.CalculateSize(_repeated_audioStream_codec);
      if (HasStartTime) {
        size += 1 + 8;
      }
      if (HasEndTime) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AudioDecoderOptions other) {
      if (other == null) {
        return;
      }
      audioStream_.Add(other.audioStream_);
      if (other.HasStartTime) {
        StartTime = other.StartTime;
      }
      if (other.HasEndTime) {
        EndTime = other.EndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            audioStream_.AddEntriesFrom(input, _repeated_audioStream_codec);
            break;
          }
          case 17: {
            StartTime = input.ReadDouble();
            break;
          }
          case 25: {
            EndTime = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            audioStream_.AddEntriesFrom(ref input, _repeated_audioStream_codec);
            break;
          }
          case 17: {
            StartTime = input.ReadDouble();
            break;
          }
          case 25: {
            EndTime = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

    #region Extensions
    /// <summary>Container for extensions for other messages declared in the AudioDecoderOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Extensions {
      public static readonly pb::Extension<global::Mediapipe.CalculatorOptions, global::Mediapipe.AudioDecoderOptions> Ext =
        new pb::Extension<global::Mediapipe.CalculatorOptions, global::Mediapipe.AudioDecoderOptions>(263370674, pb::FieldCodec.ForMessage(2106965394, global::Mediapipe.AudioDecoderOptions.Parser));
    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
