// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mediapipe/util/tracking/tone_models.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mediapipe {

  /// <summary>Holder for reflection information generated from mediapipe/util/tracking/tone_models.proto</summary>
  public static partial class ToneModelsReflection {

    #region Descriptor
    /// <summary>File descriptor for mediapipe/util/tracking/tone_models.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ToneModelsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiltZWRpYXBpcGUvdXRpbC90cmFja2luZy90b25lX21vZGVscy5wcm90bxIJ",
            "bWVkaWFwaXBlIocBCg1HYWluQmlhc01vZGVsEhIKB2dhaW5fYzEYASABKAI6",
            "ATESEgoHYmlhc19jMRgCIAEoAjoBMBISCgdnYWluX2MyGAMgASgCOgExEhIK",
            "B2JpYXNfYzIYBCABKAI6ATASEgoHZ2Fpbl9jMxgFIAEoAjoBMRISCgdiaWFz",
            "X2MzGAYgASgCOgEwIj8KFE1peHR1cmVHYWluQmlhc01vZGVsEicKBW1vZGVs",
            "GAEgAygLMhgubWVkaWFwaXBlLkdhaW5CaWFzTW9kZWwi3QEKD0FmZmluZVRv",
            "bmVNb2RlbBIPCgRnXzAwGAEgASgCOgExEg8KBGdfMDEYAiABKAI6ATASDwoE",
            "Z18wMhgDIAEoAjoBMBIPCgRnXzAzGAQgASgCOgEwEg8KBGdfMTAYBSABKAI6",
            "ATASDwoEZ18xMRgGIAEoAjoBMRIPCgRnXzEyGAcgASgCOgEwEg8KBGdfMTMY",
            "CCABKAI6ATASDwoEZ18yMBgJIAEoAjoBMBIPCgRnXzIxGAogASgCOgEwEg8K",
            "BGdfMjIYCyABKAI6ATESDwoEZ18yMxgMIAEoAjoBMCJDChZNaXh0dXJlQWZm",
            "aW5lVG9uZU1vZGVsEikKBW1vZGVsGAEgAygLMhoubWVkaWFwaXBlLkFmZmlu",
            "ZVRvbmVNb2RlbA=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mediapipe.GainBiasModel), global::Mediapipe.GainBiasModel.Parser, new[]{ "GainC1", "BiasC1", "GainC2", "BiasC2", "GainC3", "BiasC3" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mediapipe.MixtureGainBiasModel), global::Mediapipe.MixtureGainBiasModel.Parser, new[]{ "Model" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mediapipe.AffineToneModel), global::Mediapipe.AffineToneModel.Parser, new[]{ "G00", "G01", "G02", "G03", "G10", "G11", "G12", "G13", "G20", "G21", "G22", "G23" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mediapipe.MixtureAffineToneModel), global::Mediapipe.MixtureAffineToneModel.Parser, new[]{ "Model" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Transforms a 3D color vector x = (c1, c2, c3) according to
  ///  [ gain_c1    0      0      bias_c1       *   [ c1
  ///    0       gain_c2   0      bias_c2             c2
  ///    0          0    gain_c3  bias_c3 ]           c3
  ///                                                  1 ]
  /// </summary>
  public sealed partial class GainBiasModel : pb::IMessage<GainBiasModel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GainBiasModel> _parser = new pb::MessageParser<GainBiasModel>(() => new GainBiasModel());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GainBiasModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mediapipe.ToneModelsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GainBiasModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GainBiasModel(GainBiasModel other) : this() {
      _hasBits0 = other._hasBits0;
      gainC1_ = other.gainC1_;
      biasC1_ = other.biasC1_;
      gainC2_ = other.gainC2_;
      biasC2_ = other.biasC2_;
      gainC3_ = other.gainC3_;
      biasC3_ = other.biasC3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GainBiasModel Clone() {
      return new GainBiasModel(this);
    }

    /// <summary>Field number for the "gain_c1" field.</summary>
    public const int GainC1FieldNumber = 1;
    private readonly static float GainC1DefaultValue = 1F;

    private float gainC1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float GainC1 {
      get { if ((_hasBits0 & 1) != 0) { return gainC1_; } else { return GainC1DefaultValue; } }
      set {
        _hasBits0 |= 1;
        gainC1_ = value;
      }
    }
    /// <summary>Gets whether the "gain_c1" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGainC1 {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "gain_c1" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGainC1() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "bias_c1" field.</summary>
    public const int BiasC1FieldNumber = 2;
    private readonly static float BiasC1DefaultValue = 0F;

    private float biasC1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BiasC1 {
      get { if ((_hasBits0 & 2) != 0) { return biasC1_; } else { return BiasC1DefaultValue; } }
      set {
        _hasBits0 |= 2;
        biasC1_ = value;
      }
    }
    /// <summary>Gets whether the "bias_c1" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBiasC1 {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "bias_c1" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBiasC1() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "gain_c2" field.</summary>
    public const int GainC2FieldNumber = 3;
    private readonly static float GainC2DefaultValue = 1F;

    private float gainC2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float GainC2 {
      get { if ((_hasBits0 & 4) != 0) { return gainC2_; } else { return GainC2DefaultValue; } }
      set {
        _hasBits0 |= 4;
        gainC2_ = value;
      }
    }
    /// <summary>Gets whether the "gain_c2" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGainC2 {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "gain_c2" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGainC2() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "bias_c2" field.</summary>
    public const int BiasC2FieldNumber = 4;
    private readonly static float BiasC2DefaultValue = 0F;

    private float biasC2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BiasC2 {
      get { if ((_hasBits0 & 8) != 0) { return biasC2_; } else { return BiasC2DefaultValue; } }
      set {
        _hasBits0 |= 8;
        biasC2_ = value;
      }
    }
    /// <summary>Gets whether the "bias_c2" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBiasC2 {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "bias_c2" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBiasC2() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "gain_c3" field.</summary>
    public const int GainC3FieldNumber = 5;
    private readonly static float GainC3DefaultValue = 1F;

    private float gainC3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float GainC3 {
      get { if ((_hasBits0 & 16) != 0) { return gainC3_; } else { return GainC3DefaultValue; } }
      set {
        _hasBits0 |= 16;
        gainC3_ = value;
      }
    }
    /// <summary>Gets whether the "gain_c3" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGainC3 {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "gain_c3" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGainC3() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "bias_c3" field.</summary>
    public const int BiasC3FieldNumber = 6;
    private readonly static float BiasC3DefaultValue = 0F;

    private float biasC3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BiasC3 {
      get { if ((_hasBits0 & 32) != 0) { return biasC3_; } else { return BiasC3DefaultValue; } }
      set {
        _hasBits0 |= 32;
        biasC3_ = value;
      }
    }
    /// <summary>Gets whether the "bias_c3" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBiasC3 {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "bias_c3" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBiasC3() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GainBiasModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GainBiasModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(GainC1, other.GainC1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BiasC1, other.BiasC1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(GainC2, other.GainC2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BiasC2, other.BiasC2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(GainC3, other.GainC3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BiasC3, other.BiasC3)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGainC1) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(GainC1);
      if (HasBiasC1) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BiasC1);
      if (HasGainC2) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(GainC2);
      if (HasBiasC2) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BiasC2);
      if (HasGainC3) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(GainC3);
      if (HasBiasC3) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BiasC3);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGainC1) {
        output.WriteRawTag(13);
        output.WriteFloat(GainC1);
      }
      if (HasBiasC1) {
        output.WriteRawTag(21);
        output.WriteFloat(BiasC1);
      }
      if (HasGainC2) {
        output.WriteRawTag(29);
        output.WriteFloat(GainC2);
      }
      if (HasBiasC2) {
        output.WriteRawTag(37);
        output.WriteFloat(BiasC2);
      }
      if (HasGainC3) {
        output.WriteRawTag(45);
        output.WriteFloat(GainC3);
      }
      if (HasBiasC3) {
        output.WriteRawTag(53);
        output.WriteFloat(BiasC3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGainC1) {
        output.WriteRawTag(13);
        output.WriteFloat(GainC1);
      }
      if (HasBiasC1) {
        output.WriteRawTag(21);
        output.WriteFloat(BiasC1);
      }
      if (HasGainC2) {
        output.WriteRawTag(29);
        output.WriteFloat(GainC2);
      }
      if (HasBiasC2) {
        output.WriteRawTag(37);
        output.WriteFloat(BiasC2);
      }
      if (HasGainC3) {
        output.WriteRawTag(45);
        output.WriteFloat(GainC3);
      }
      if (HasBiasC3) {
        output.WriteRawTag(53);
        output.WriteFloat(BiasC3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGainC1) {
        size += 1 + 4;
      }
      if (HasBiasC1) {
        size += 1 + 4;
      }
      if (HasGainC2) {
        size += 1 + 4;
      }
      if (HasBiasC2) {
        size += 1 + 4;
      }
      if (HasGainC3) {
        size += 1 + 4;
      }
      if (HasBiasC3) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GainBiasModel other) {
      if (other == null) {
        return;
      }
      if (other.HasGainC1) {
        GainC1 = other.GainC1;
      }
      if (other.HasBiasC1) {
        BiasC1 = other.BiasC1;
      }
      if (other.HasGainC2) {
        GainC2 = other.GainC2;
      }
      if (other.HasBiasC2) {
        BiasC2 = other.BiasC2;
      }
      if (other.HasGainC3) {
        GainC3 = other.GainC3;
      }
      if (other.HasBiasC3) {
        BiasC3 = other.BiasC3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            GainC1 = input.ReadFloat();
            break;
          }
          case 21: {
            BiasC1 = input.ReadFloat();
            break;
          }
          case 29: {
            GainC2 = input.ReadFloat();
            break;
          }
          case 37: {
            BiasC2 = input.ReadFloat();
            break;
          }
          case 45: {
            GainC3 = input.ReadFloat();
            break;
          }
          case 53: {
            BiasC3 = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            GainC1 = input.ReadFloat();
            break;
          }
          case 21: {
            BiasC1 = input.ReadFloat();
            break;
          }
          case 29: {
            GainC2 = input.ReadFloat();
            break;
          }
          case 37: {
            BiasC2 = input.ReadFloat();
            break;
          }
          case 45: {
            GainC3 = input.ReadFloat();
            break;
          }
          case 53: {
            BiasC3 = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MixtureGainBiasModel : pb::IMessage<MixtureGainBiasModel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MixtureGainBiasModel> _parser = new pb::MessageParser<MixtureGainBiasModel>(() => new MixtureGainBiasModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MixtureGainBiasModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mediapipe.ToneModelsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MixtureGainBiasModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MixtureGainBiasModel(MixtureGainBiasModel other) : this() {
      model_ = other.model_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MixtureGainBiasModel Clone() {
      return new MixtureGainBiasModel(this);
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Mediapipe.GainBiasModel> _repeated_model_codec
        = pb::FieldCodec.ForMessage(10, global::Mediapipe.GainBiasModel.Parser);
    private readonly pbc::RepeatedField<global::Mediapipe.GainBiasModel> model_ = new pbc::RepeatedField<global::Mediapipe.GainBiasModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Mediapipe.GainBiasModel> Model {
      get { return model_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MixtureGainBiasModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MixtureGainBiasModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!model_.Equals(other.model_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= model_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      model_.WriteTo(output, _repeated_model_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      model_.WriteTo(ref output, _repeated_model_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += model_.CalculateSize(_repeated_model_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MixtureGainBiasModel other) {
      if (other == null) {
        return;
      }
      model_.Add(other.model_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            model_.AddEntriesFrom(input, _repeated_model_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            model_.AddEntriesFrom(ref input, _repeated_model_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Transforms a 3D color vector x = (c1, c2, c3) according to
  ///  [ g_00    g_01      g_02      g_03       *   [ c1
  ///    g_10    g_11      g_12      g_13             c2
  ///    g_20    g_21      g_22      g_23 ]           c3
  ///                                                 1 ]
  /// </summary>
  public sealed partial class AffineToneModel : pb::IMessage<AffineToneModel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AffineToneModel> _parser = new pb::MessageParser<AffineToneModel>(() => new AffineToneModel());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AffineToneModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mediapipe.ToneModelsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AffineToneModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AffineToneModel(AffineToneModel other) : this() {
      _hasBits0 = other._hasBits0;
      g00_ = other.g00_;
      g01_ = other.g01_;
      g02_ = other.g02_;
      g03_ = other.g03_;
      g10_ = other.g10_;
      g11_ = other.g11_;
      g12_ = other.g12_;
      g13_ = other.g13_;
      g20_ = other.g20_;
      g21_ = other.g21_;
      g22_ = other.g22_;
      g23_ = other.g23_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AffineToneModel Clone() {
      return new AffineToneModel(this);
    }

    /// <summary>Field number for the "g_00" field.</summary>
    public const int G00FieldNumber = 1;
    private readonly static float G00DefaultValue = 1F;

    private float g00_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float G00 {
      get { if ((_hasBits0 & 1) != 0) { return g00_; } else { return G00DefaultValue; } }
      set {
        _hasBits0 |= 1;
        g00_ = value;
      }
    }
    /// <summary>Gets whether the "g_00" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasG00 {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "g_00" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearG00() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "g_01" field.</summary>
    public const int G01FieldNumber = 2;
    private readonly static float G01DefaultValue = 0F;

    private float g01_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float G01 {
      get { if ((_hasBits0 & 2) != 0) { return g01_; } else { return G01DefaultValue; } }
      set {
        _hasBits0 |= 2;
        g01_ = value;
      }
    }
    /// <summary>Gets whether the "g_01" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasG01 {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "g_01" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearG01() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "g_02" field.</summary>
    public const int G02FieldNumber = 3;
    private readonly static float G02DefaultValue = 0F;

    private float g02_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float G02 {
      get { if ((_hasBits0 & 4) != 0) { return g02_; } else { return G02DefaultValue; } }
      set {
        _hasBits0 |= 4;
        g02_ = value;
      }
    }
    /// <summary>Gets whether the "g_02" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasG02 {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "g_02" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearG02() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "g_03" field.</summary>
    public const int G03FieldNumber = 4;
    private readonly static float G03DefaultValue = 0F;

    private float g03_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float G03 {
      get { if ((_hasBits0 & 8) != 0) { return g03_; } else { return G03DefaultValue; } }
      set {
        _hasBits0 |= 8;
        g03_ = value;
      }
    }
    /// <summary>Gets whether the "g_03" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasG03 {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "g_03" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearG03() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "g_10" field.</summary>
    public const int G10FieldNumber = 5;
    private readonly static float G10DefaultValue = 0F;

    private float g10_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float G10 {
      get { if ((_hasBits0 & 16) != 0) { return g10_; } else { return G10DefaultValue; } }
      set {
        _hasBits0 |= 16;
        g10_ = value;
      }
    }
    /// <summary>Gets whether the "g_10" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasG10 {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "g_10" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearG10() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "g_11" field.</summary>
    public const int G11FieldNumber = 6;
    private readonly static float G11DefaultValue = 1F;

    private float g11_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float G11 {
      get { if ((_hasBits0 & 32) != 0) { return g11_; } else { return G11DefaultValue; } }
      set {
        _hasBits0 |= 32;
        g11_ = value;
      }
    }
    /// <summary>Gets whether the "g_11" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasG11 {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "g_11" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearG11() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "g_12" field.</summary>
    public const int G12FieldNumber = 7;
    private readonly static float G12DefaultValue = 0F;

    private float g12_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float G12 {
      get { if ((_hasBits0 & 64) != 0) { return g12_; } else { return G12DefaultValue; } }
      set {
        _hasBits0 |= 64;
        g12_ = value;
      }
    }
    /// <summary>Gets whether the "g_12" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasG12 {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "g_12" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearG12() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "g_13" field.</summary>
    public const int G13FieldNumber = 8;
    private readonly static float G13DefaultValue = 0F;

    private float g13_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float G13 {
      get { if ((_hasBits0 & 128) != 0) { return g13_; } else { return G13DefaultValue; } }
      set {
        _hasBits0 |= 128;
        g13_ = value;
      }
    }
    /// <summary>Gets whether the "g_13" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasG13 {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "g_13" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearG13() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "g_20" field.</summary>
    public const int G20FieldNumber = 9;
    private readonly static float G20DefaultValue = 0F;

    private float g20_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float G20 {
      get { if ((_hasBits0 & 256) != 0) { return g20_; } else { return G20DefaultValue; } }
      set {
        _hasBits0 |= 256;
        g20_ = value;
      }
    }
    /// <summary>Gets whether the "g_20" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasG20 {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "g_20" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearG20() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "g_21" field.</summary>
    public const int G21FieldNumber = 10;
    private readonly static float G21DefaultValue = 0F;

    private float g21_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float G21 {
      get { if ((_hasBits0 & 512) != 0) { return g21_; } else { return G21DefaultValue; } }
      set {
        _hasBits0 |= 512;
        g21_ = value;
      }
    }
    /// <summary>Gets whether the "g_21" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasG21 {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "g_21" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearG21() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "g_22" field.</summary>
    public const int G22FieldNumber = 11;
    private readonly static float G22DefaultValue = 1F;

    private float g22_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float G22 {
      get { if ((_hasBits0 & 1024) != 0) { return g22_; } else { return G22DefaultValue; } }
      set {
        _hasBits0 |= 1024;
        g22_ = value;
      }
    }
    /// <summary>Gets whether the "g_22" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasG22 {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "g_22" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearG22() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "g_23" field.</summary>
    public const int G23FieldNumber = 12;
    private readonly static float G23DefaultValue = 0F;

    private float g23_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float G23 {
      get { if ((_hasBits0 & 2048) != 0) { return g23_; } else { return G23DefaultValue; } }
      set {
        _hasBits0 |= 2048;
        g23_ = value;
      }
    }
    /// <summary>Gets whether the "g_23" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasG23 {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "g_23" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearG23() {
      _hasBits0 &= ~2048;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AffineToneModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AffineToneModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(G00, other.G00)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(G01, other.G01)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(G02, other.G02)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(G03, other.G03)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(G10, other.G10)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(G11, other.G11)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(G12, other.G12)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(G13, other.G13)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(G20, other.G20)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(G21, other.G21)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(G22, other.G22)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(G23, other.G23)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasG00) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(G00);
      if (HasG01) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(G01);
      if (HasG02) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(G02);
      if (HasG03) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(G03);
      if (HasG10) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(G10);
      if (HasG11) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(G11);
      if (HasG12) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(G12);
      if (HasG13) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(G13);
      if (HasG20) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(G20);
      if (HasG21) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(G21);
      if (HasG22) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(G22);
      if (HasG23) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(G23);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasG00) {
        output.WriteRawTag(13);
        output.WriteFloat(G00);
      }
      if (HasG01) {
        output.WriteRawTag(21);
        output.WriteFloat(G01);
      }
      if (HasG02) {
        output.WriteRawTag(29);
        output.WriteFloat(G02);
      }
      if (HasG03) {
        output.WriteRawTag(37);
        output.WriteFloat(G03);
      }
      if (HasG10) {
        output.WriteRawTag(45);
        output.WriteFloat(G10);
      }
      if (HasG11) {
        output.WriteRawTag(53);
        output.WriteFloat(G11);
      }
      if (HasG12) {
        output.WriteRawTag(61);
        output.WriteFloat(G12);
      }
      if (HasG13) {
        output.WriteRawTag(69);
        output.WriteFloat(G13);
      }
      if (HasG20) {
        output.WriteRawTag(77);
        output.WriteFloat(G20);
      }
      if (HasG21) {
        output.WriteRawTag(85);
        output.WriteFloat(G21);
      }
      if (HasG22) {
        output.WriteRawTag(93);
        output.WriteFloat(G22);
      }
      if (HasG23) {
        output.WriteRawTag(101);
        output.WriteFloat(G23);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasG00) {
        output.WriteRawTag(13);
        output.WriteFloat(G00);
      }
      if (HasG01) {
        output.WriteRawTag(21);
        output.WriteFloat(G01);
      }
      if (HasG02) {
        output.WriteRawTag(29);
        output.WriteFloat(G02);
      }
      if (HasG03) {
        output.WriteRawTag(37);
        output.WriteFloat(G03);
      }
      if (HasG10) {
        output.WriteRawTag(45);
        output.WriteFloat(G10);
      }
      if (HasG11) {
        output.WriteRawTag(53);
        output.WriteFloat(G11);
      }
      if (HasG12) {
        output.WriteRawTag(61);
        output.WriteFloat(G12);
      }
      if (HasG13) {
        output.WriteRawTag(69);
        output.WriteFloat(G13);
      }
      if (HasG20) {
        output.WriteRawTag(77);
        output.WriteFloat(G20);
      }
      if (HasG21) {
        output.WriteRawTag(85);
        output.WriteFloat(G21);
      }
      if (HasG22) {
        output.WriteRawTag(93);
        output.WriteFloat(G22);
      }
      if (HasG23) {
        output.WriteRawTag(101);
        output.WriteFloat(G23);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasG00) {
        size += 1 + 4;
      }
      if (HasG01) {
        size += 1 + 4;
      }
      if (HasG02) {
        size += 1 + 4;
      }
      if (HasG03) {
        size += 1 + 4;
      }
      if (HasG10) {
        size += 1 + 4;
      }
      if (HasG11) {
        size += 1 + 4;
      }
      if (HasG12) {
        size += 1 + 4;
      }
      if (HasG13) {
        size += 1 + 4;
      }
      if (HasG20) {
        size += 1 + 4;
      }
      if (HasG21) {
        size += 1 + 4;
      }
      if (HasG22) {
        size += 1 + 4;
      }
      if (HasG23) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AffineToneModel other) {
      if (other == null) {
        return;
      }
      if (other.HasG00) {
        G00 = other.G00;
      }
      if (other.HasG01) {
        G01 = other.G01;
      }
      if (other.HasG02) {
        G02 = other.G02;
      }
      if (other.HasG03) {
        G03 = other.G03;
      }
      if (other.HasG10) {
        G10 = other.G10;
      }
      if (other.HasG11) {
        G11 = other.G11;
      }
      if (other.HasG12) {
        G12 = other.G12;
      }
      if (other.HasG13) {
        G13 = other.G13;
      }
      if (other.HasG20) {
        G20 = other.G20;
      }
      if (other.HasG21) {
        G21 = other.G21;
      }
      if (other.HasG22) {
        G22 = other.G22;
      }
      if (other.HasG23) {
        G23 = other.G23;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            G00 = input.ReadFloat();
            break;
          }
          case 21: {
            G01 = input.ReadFloat();
            break;
          }
          case 29: {
            G02 = input.ReadFloat();
            break;
          }
          case 37: {
            G03 = input.ReadFloat();
            break;
          }
          case 45: {
            G10 = input.ReadFloat();
            break;
          }
          case 53: {
            G11 = input.ReadFloat();
            break;
          }
          case 61: {
            G12 = input.ReadFloat();
            break;
          }
          case 69: {
            G13 = input.ReadFloat();
            break;
          }
          case 77: {
            G20 = input.ReadFloat();
            break;
          }
          case 85: {
            G21 = input.ReadFloat();
            break;
          }
          case 93: {
            G22 = input.ReadFloat();
            break;
          }
          case 101: {
            G23 = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            G00 = input.ReadFloat();
            break;
          }
          case 21: {
            G01 = input.ReadFloat();
            break;
          }
          case 29: {
            G02 = input.ReadFloat();
            break;
          }
          case 37: {
            G03 = input.ReadFloat();
            break;
          }
          case 45: {
            G10 = input.ReadFloat();
            break;
          }
          case 53: {
            G11 = input.ReadFloat();
            break;
          }
          case 61: {
            G12 = input.ReadFloat();
            break;
          }
          case 69: {
            G13 = input.ReadFloat();
            break;
          }
          case 77: {
            G20 = input.ReadFloat();
            break;
          }
          case 85: {
            G21 = input.ReadFloat();
            break;
          }
          case 93: {
            G22 = input.ReadFloat();
            break;
          }
          case 101: {
            G23 = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MixtureAffineToneModel : pb::IMessage<MixtureAffineToneModel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MixtureAffineToneModel> _parser = new pb::MessageParser<MixtureAffineToneModel>(() => new MixtureAffineToneModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MixtureAffineToneModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mediapipe.ToneModelsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MixtureAffineToneModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MixtureAffineToneModel(MixtureAffineToneModel other) : this() {
      model_ = other.model_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MixtureAffineToneModel Clone() {
      return new MixtureAffineToneModel(this);
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Mediapipe.AffineToneModel> _repeated_model_codec
        = pb::FieldCodec.ForMessage(10, global::Mediapipe.AffineToneModel.Parser);
    private readonly pbc::RepeatedField<global::Mediapipe.AffineToneModel> model_ = new pbc::RepeatedField<global::Mediapipe.AffineToneModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Mediapipe.AffineToneModel> Model {
      get { return model_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MixtureAffineToneModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MixtureAffineToneModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!model_.Equals(other.model_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= model_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      model_.WriteTo(output, _repeated_model_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      model_.WriteTo(ref output, _repeated_model_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += model_.CalculateSize(_repeated_model_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MixtureAffineToneModel other) {
      if (other == null) {
        return;
      }
      model_.Add(other.model_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            model_.AddEntriesFrom(input, _repeated_model_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            model_.AddEntriesFrom(ref input, _repeated_model_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
