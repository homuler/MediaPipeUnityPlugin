// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mediapipe/framework/formats/annotation/locus.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mediapipe {

  /// <summary>Holder for reflection information generated from mediapipe/framework/formats/annotation/locus.proto</summary>
  public static partial class LocusReflection {

    #region Descriptor
    /// <summary>File descriptor for mediapipe/framework/formats/annotation/locus.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LocusReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJtZWRpYXBpcGUvZnJhbWV3b3JrL2Zvcm1hdHMvYW5ub3RhdGlvbi9sb2N1",
            "cy5wcm90bxIJbWVkaWFwaXBlGjptZWRpYXBpcGUvZnJhbWV3b3JrL2Zvcm1h",
            "dHMvYW5ub3RhdGlvbi9yYXN0ZXJpemF0aW9uLnByb3RvIt8CCgVMb2N1cxIu",
            "Cgpsb2N1c190eXBlGAEgASgOMhoubWVkaWFwaXBlLkxvY3VzLkxvY3VzVHlw",
            "ZRIQCghsb2N1c19pZBgCIAEoBhIVCg1sb2N1c19pZF9zZWVkGAYgASgGEhwK",
            "DmNvbmNhdGVuYXRhYmxlGAUgASgIOgR0cnVlEiwKDGJvdW5kaW5nX2JveBgD",
            "IAEoCzIWLm1lZGlhcGlwZS5Cb3VuZGluZ0JveBIVCgl0aW1lc3RhbXAYByAB",
            "KAU6Ai0xEigKBnJlZ2lvbhgEIAEoCzIYLm1lZGlhcGlwZS5SYXN0ZXJpemF0",
            "aW9uEikKD2NvbXBvbmVudF9sb2N1cxgIIAMoCzIQLm1lZGlhcGlwZS5Mb2N1",
            "cyJFCglMb2N1c1R5cGUSCgoGR0xPQkFMEAESEAoMQk9VTkRJTkdfQk9YEAIS",
            "CgoGUkVHSU9OEAMSDgoKVklERU9fVFVCRRAEIlAKC0JvdW5kaW5nQm94Eg4K",
            "BmxlZnRfeBgBIAEoBRIPCgd1cHBlcl95GAIgASgFEg8KB3JpZ2h0X3gYAyAB",
            "KAUSDwoHbG93ZXJfeRgEIAEoBUID+AEB"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Mediapipe.RasterizationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mediapipe.Locus), global::Mediapipe.Locus.Parser, new[]{ "LocusType", "LocusId", "LocusIdSeed", "Concatenatable", "BoundingBox", "Timestamp", "Region", "ComponentLocus" }, null, new[]{ typeof(global::Mediapipe.Locus.Types.LocusType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mediapipe.BoundingBox), global::Mediapipe.BoundingBox.Parser, new[]{ "LeftX", "UpperY", "RightX", "LowerY" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A way to identify a part of an image. A locus does not need to correspond to
  /// a subset of pixels -- e.g. for a local descriptor we might define a locus in
  /// terms of its location and scale, even if the support of the descriptor is the
  /// entire image (with location-dependent weighting).
  /// </summary>
  public sealed partial class Locus : pb::IMessage<Locus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Locus> _parser = new pb::MessageParser<Locus>(() => new Locus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Locus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mediapipe.LocusReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Locus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Locus(Locus other) : this() {
      _hasBits0 = other._hasBits0;
      locusType_ = other.locusType_;
      locusId_ = other.locusId_;
      locusIdSeed_ = other.locusIdSeed_;
      concatenatable_ = other.concatenatable_;
      boundingBox_ = other.boundingBox_ != null ? other.boundingBox_.Clone() : null;
      timestamp_ = other.timestamp_;
      region_ = other.region_ != null ? other.region_.Clone() : null;
      componentLocus_ = other.componentLocus_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Locus Clone() {
      return new Locus(this);
    }

    /// <summary>Field number for the "locus_type" field.</summary>
    public const int LocusTypeFieldNumber = 1;
    private readonly static global::Mediapipe.Locus.Types.LocusType LocusTypeDefaultValue = global::Mediapipe.Locus.Types.LocusType.Global;

    private global::Mediapipe.Locus.Types.LocusType locusType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mediapipe.Locus.Types.LocusType LocusType {
      get { if ((_hasBits0 & 1) != 0) { return locusType_; } else { return LocusTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        locusType_ = value;
      }
    }
    /// <summary>Gets whether the "locus_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLocusType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "locus_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLocusType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "locus_id" field.</summary>
    public const int LocusIdFieldNumber = 2;
    private readonly static ulong LocusIdDefaultValue = 0UL;

    private ulong locusId_;
    /// <summary>
    /// A unique identifier for the locus. It is meaningless to compare the
    /// locus_ids in different images. The client should not also assume that
    /// applying the same processing to the same image multiple times will produce
    /// the same locus_id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong LocusId {
      get { if ((_hasBits0 & 2) != 0) { return locusId_; } else { return LocusIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        locusId_ = value;
      }
    }
    /// <summary>Gets whether the "locus_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLocusId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "locus_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLocusId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "locus_id_seed" field.</summary>
    public const int LocusIdSeedFieldNumber = 6;
    private readonly static ulong LocusIdSeedDefaultValue = 0UL;

    private ulong locusIdSeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong LocusIdSeed {
      get { if ((_hasBits0 & 8) != 0) { return locusIdSeed_; } else { return LocusIdSeedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        locusIdSeed_ = value;
      }
    }
    /// <summary>Gets whether the "locus_id_seed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLocusIdSeed {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "locus_id_seed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLocusIdSeed() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "concatenatable" field.</summary>
    public const int ConcatenatableFieldNumber = 5;
    private readonly static bool ConcatenatableDefaultValue = true;

    private bool concatenatable_;
    /// <summary>
    /// "Concatenatable" loci have the property that they appear in the same number
    /// and order for all images, so their corresponding features can be
    /// concatenated. Examples of concatenatable loci include global loci, those
    /// corresponding to fixed bounding boxes, or a single most salient
    /// region. Loci produced by segmentation with a variable number of segments,
    /// on the other hand, are not concatenatable. This flag is true by default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Concatenatable {
      get { if ((_hasBits0 & 4) != 0) { return concatenatable_; } else { return ConcatenatableDefaultValue; } }
      set {
        _hasBits0 |= 4;
        concatenatable_ = value;
      }
    }
    /// <summary>Gets whether the "concatenatable" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConcatenatable {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "concatenatable" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConcatenatable() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "bounding_box" field.</summary>
    public const int BoundingBoxFieldNumber = 3;
    private global::Mediapipe.BoundingBox boundingBox_;
    /// <summary>
    /// Required if locus_type = BOUNDING_BOX, Specifies a bounding box for the
    /// label
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mediapipe.BoundingBox BoundingBox {
      get { return boundingBox_; }
      set {
        boundingBox_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 7;
    private readonly static int TimestampDefaultValue = -1;

    private int timestamp_;
    /// <summary>
    /// Specifies a timestamp if this locus appears in a video.
    /// timestamp is specified in mSec from start of the video and refers to the
    /// begining of the locus.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Timestamp {
      get { if ((_hasBits0 & 16) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
      set {
        _hasBits0 |= 16;
        timestamp_ = value;
      }
    }
    /// <summary>Gets whether the "timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimestamp {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimestamp() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 4;
    private global::Mediapipe.Rasterization region_;
    /// <summary>
    /// Required if locus_type = REGION, Specifies a region using a scanline
    /// encoding
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mediapipe.Rasterization Region {
      get { return region_; }
      set {
        region_ = value;
      }
    }

    /// <summary>Field number for the "component_locus" field.</summary>
    public const int ComponentLocusFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Mediapipe.Locus> _repeated_componentLocus_codec
        = pb::FieldCodec.ForMessage(66, global::Mediapipe.Locus.Parser);
    private readonly pbc::RepeatedField<global::Mediapipe.Locus> componentLocus_ = new pbc::RepeatedField<global::Mediapipe.Locus>();
    /// <summary>
    /// Required if locus_type = VIDEO_TUBE. Specifies the component loci of the
    /// tube.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Mediapipe.Locus> ComponentLocus {
      get { return componentLocus_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Locus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Locus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LocusType != other.LocusType) return false;
      if (LocusId != other.LocusId) return false;
      if (LocusIdSeed != other.LocusIdSeed) return false;
      if (Concatenatable != other.Concatenatable) return false;
      if (!object.Equals(BoundingBox, other.BoundingBox)) return false;
      if (Timestamp != other.Timestamp) return false;
      if (!object.Equals(Region, other.Region)) return false;
      if(!componentLocus_.Equals(other.componentLocus_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLocusType) hash ^= LocusType.GetHashCode();
      if (HasLocusId) hash ^= LocusId.GetHashCode();
      if (HasLocusIdSeed) hash ^= LocusIdSeed.GetHashCode();
      if (HasConcatenatable) hash ^= Concatenatable.GetHashCode();
      if (boundingBox_ != null) hash ^= BoundingBox.GetHashCode();
      if (HasTimestamp) hash ^= Timestamp.GetHashCode();
      if (region_ != null) hash ^= Region.GetHashCode();
      hash ^= componentLocus_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLocusType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) LocusType);
      }
      if (HasLocusId) {
        output.WriteRawTag(17);
        output.WriteFixed64(LocusId);
      }
      if (boundingBox_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BoundingBox);
      }
      if (region_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Region);
      }
      if (HasConcatenatable) {
        output.WriteRawTag(40);
        output.WriteBool(Concatenatable);
      }
      if (HasLocusIdSeed) {
        output.WriteRawTag(49);
        output.WriteFixed64(LocusIdSeed);
      }
      if (HasTimestamp) {
        output.WriteRawTag(56);
        output.WriteInt32(Timestamp);
      }
      componentLocus_.WriteTo(output, _repeated_componentLocus_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLocusType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) LocusType);
      }
      if (HasLocusId) {
        output.WriteRawTag(17);
        output.WriteFixed64(LocusId);
      }
      if (boundingBox_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BoundingBox);
      }
      if (region_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Region);
      }
      if (HasConcatenatable) {
        output.WriteRawTag(40);
        output.WriteBool(Concatenatable);
      }
      if (HasLocusIdSeed) {
        output.WriteRawTag(49);
        output.WriteFixed64(LocusIdSeed);
      }
      if (HasTimestamp) {
        output.WriteRawTag(56);
        output.WriteInt32(Timestamp);
      }
      componentLocus_.WriteTo(ref output, _repeated_componentLocus_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLocusType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LocusType);
      }
      if (HasLocusId) {
        size += 1 + 8;
      }
      if (HasLocusIdSeed) {
        size += 1 + 8;
      }
      if (HasConcatenatable) {
        size += 1 + 1;
      }
      if (boundingBox_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BoundingBox);
      }
      if (HasTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Timestamp);
      }
      if (region_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Region);
      }
      size += componentLocus_.CalculateSize(_repeated_componentLocus_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Locus other) {
      if (other == null) {
        return;
      }
      if (other.HasLocusType) {
        LocusType = other.LocusType;
      }
      if (other.HasLocusId) {
        LocusId = other.LocusId;
      }
      if (other.HasLocusIdSeed) {
        LocusIdSeed = other.LocusIdSeed;
      }
      if (other.HasConcatenatable) {
        Concatenatable = other.Concatenatable;
      }
      if (other.boundingBox_ != null) {
        if (boundingBox_ == null) {
          BoundingBox = new global::Mediapipe.BoundingBox();
        }
        BoundingBox.MergeFrom(other.BoundingBox);
      }
      if (other.HasTimestamp) {
        Timestamp = other.Timestamp;
      }
      if (other.region_ != null) {
        if (region_ == null) {
          Region = new global::Mediapipe.Rasterization();
        }
        Region.MergeFrom(other.Region);
      }
      componentLocus_.Add(other.componentLocus_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LocusType = (global::Mediapipe.Locus.Types.LocusType) input.ReadEnum();
            break;
          }
          case 17: {
            LocusId = input.ReadFixed64();
            break;
          }
          case 26: {
            if (boundingBox_ == null) {
              BoundingBox = new global::Mediapipe.BoundingBox();
            }
            input.ReadMessage(BoundingBox);
            break;
          }
          case 34: {
            if (region_ == null) {
              Region = new global::Mediapipe.Rasterization();
            }
            input.ReadMessage(Region);
            break;
          }
          case 40: {
            Concatenatable = input.ReadBool();
            break;
          }
          case 49: {
            LocusIdSeed = input.ReadFixed64();
            break;
          }
          case 56: {
            Timestamp = input.ReadInt32();
            break;
          }
          case 66: {
            componentLocus_.AddEntriesFrom(input, _repeated_componentLocus_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LocusType = (global::Mediapipe.Locus.Types.LocusType) input.ReadEnum();
            break;
          }
          case 17: {
            LocusId = input.ReadFixed64();
            break;
          }
          case 26: {
            if (boundingBox_ == null) {
              BoundingBox = new global::Mediapipe.BoundingBox();
            }
            input.ReadMessage(BoundingBox);
            break;
          }
          case 34: {
            if (region_ == null) {
              Region = new global::Mediapipe.Rasterization();
            }
            input.ReadMessage(Region);
            break;
          }
          case 40: {
            Concatenatable = input.ReadBool();
            break;
          }
          case 49: {
            LocusIdSeed = input.ReadFixed64();
            break;
          }
          case 56: {
            Timestamp = input.ReadInt32();
            break;
          }
          case 66: {
            componentLocus_.AddEntriesFrom(ref input, _repeated_componentLocus_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Locus message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Types of image loci on the granularity of the annotation.
      /// </summary>
      public enum LocusType {
        /// <summary>
        /// The whole image, without localization.
        /// </summary>
        [pbr::OriginalName("GLOBAL")] Global = 1,
        /// <summary>
        /// The locus refers to a specified bounding box.
        /// Requires bounding_box below.
        /// </summary>
        [pbr::OriginalName("BOUNDING_BOX")] BoundingBox = 2,
        /// <summary>
        /// The locus refers to specified regions in the image.
        /// Requires region below.
        /// </summary>
        [pbr::OriginalName("REGION")] Region = 3,
        /// <summary>
        /// This locus refers to groups of loci. Requires component_locus below.
        /// </summary>
        [pbr::OriginalName("VIDEO_TUBE")] VideoTube = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// A representation of a bounding box.
  /// </summary>
  public sealed partial class BoundingBox : pb::IMessage<BoundingBox>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BoundingBox> _parser = new pb::MessageParser<BoundingBox>(() => new BoundingBox());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BoundingBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mediapipe.LocusReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BoundingBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BoundingBox(BoundingBox other) : this() {
      _hasBits0 = other._hasBits0;
      leftX_ = other.leftX_;
      upperY_ = other.upperY_;
      rightX_ = other.rightX_;
      lowerY_ = other.lowerY_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BoundingBox Clone() {
      return new BoundingBox(this);
    }

    /// <summary>Field number for the "left_x" field.</summary>
    public const int LeftXFieldNumber = 1;
    private readonly static int LeftXDefaultValue = 0;

    private int leftX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LeftX {
      get { if ((_hasBits0 & 1) != 0) { return leftX_; } else { return LeftXDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leftX_ = value;
      }
    }
    /// <summary>Gets whether the "left_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeftX {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "left_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeftX() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "upper_y" field.</summary>
    public const int UpperYFieldNumber = 2;
    private readonly static int UpperYDefaultValue = 0;

    private int upperY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UpperY {
      get { if ((_hasBits0 & 2) != 0) { return upperY_; } else { return UpperYDefaultValue; } }
      set {
        _hasBits0 |= 2;
        upperY_ = value;
      }
    }
    /// <summary>Gets whether the "upper_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUpperY {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "upper_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUpperY() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "right_x" field.</summary>
    public const int RightXFieldNumber = 3;
    private readonly static int RightXDefaultValue = 0;

    private int rightX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RightX {
      get { if ((_hasBits0 & 4) != 0) { return rightX_; } else { return RightXDefaultValue; } }
      set {
        _hasBits0 |= 4;
        rightX_ = value;
      }
    }
    /// <summary>Gets whether the "right_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRightX {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "right_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRightX() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "lower_y" field.</summary>
    public const int LowerYFieldNumber = 4;
    private readonly static int LowerYDefaultValue = 0;

    private int lowerY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LowerY {
      get { if ((_hasBits0 & 8) != 0) { return lowerY_; } else { return LowerYDefaultValue; } }
      set {
        _hasBits0 |= 8;
        lowerY_ = value;
      }
    }
    /// <summary>Gets whether the "lower_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLowerY {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "lower_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLowerY() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BoundingBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BoundingBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LeftX != other.LeftX) return false;
      if (UpperY != other.UpperY) return false;
      if (RightX != other.RightX) return false;
      if (LowerY != other.LowerY) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLeftX) hash ^= LeftX.GetHashCode();
      if (HasUpperY) hash ^= UpperY.GetHashCode();
      if (HasRightX) hash ^= RightX.GetHashCode();
      if (HasLowerY) hash ^= LowerY.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLeftX) {
        output.WriteRawTag(8);
        output.WriteInt32(LeftX);
      }
      if (HasUpperY) {
        output.WriteRawTag(16);
        output.WriteInt32(UpperY);
      }
      if (HasRightX) {
        output.WriteRawTag(24);
        output.WriteInt32(RightX);
      }
      if (HasLowerY) {
        output.WriteRawTag(32);
        output.WriteInt32(LowerY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLeftX) {
        output.WriteRawTag(8);
        output.WriteInt32(LeftX);
      }
      if (HasUpperY) {
        output.WriteRawTag(16);
        output.WriteInt32(UpperY);
      }
      if (HasRightX) {
        output.WriteRawTag(24);
        output.WriteInt32(RightX);
      }
      if (HasLowerY) {
        output.WriteRawTag(32);
        output.WriteInt32(LowerY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLeftX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftX);
      }
      if (HasUpperY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UpperY);
      }
      if (HasRightX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RightX);
      }
      if (HasLowerY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LowerY);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BoundingBox other) {
      if (other == null) {
        return;
      }
      if (other.HasLeftX) {
        LeftX = other.LeftX;
      }
      if (other.HasUpperY) {
        UpperY = other.UpperY;
      }
      if (other.HasRightX) {
        RightX = other.RightX;
      }
      if (other.HasLowerY) {
        LowerY = other.LowerY;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LeftX = input.ReadInt32();
            break;
          }
          case 16: {
            UpperY = input.ReadInt32();
            break;
          }
          case 24: {
            RightX = input.ReadInt32();
            break;
          }
          case 32: {
            LowerY = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LeftX = input.ReadInt32();
            break;
          }
          case 16: {
            UpperY = input.ReadInt32();
            break;
          }
          case 24: {
            RightX = input.ReadInt32();
            break;
          }
          case 32: {
            LowerY = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
