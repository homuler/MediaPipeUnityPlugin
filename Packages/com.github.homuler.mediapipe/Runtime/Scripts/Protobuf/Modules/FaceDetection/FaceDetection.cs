// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mediapipe/modules/face_detection/face_detection.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mediapipe {

  /// <summary>Holder for reflection information generated from mediapipe/modules/face_detection/face_detection.proto</summary>
  public static partial class FaceDetectionReflection {

    #region Descriptor
    /// <summary>File descriptor for mediapipe/modules/face_detection/face_detection.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FaceDetectionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjVtZWRpYXBpcGUvbW9kdWxlcy9mYWNlX2RldGVjdGlvbi9mYWNlX2RldGVj",
            "dGlvbi5wcm90bxIJbWVkaWFwaXBlGjdtZWRpYXBpcGUvY2FsY3VsYXRvcnMv",
            "dGVuc29yL2luZmVyZW5jZV9jYWxjdWxhdG9yLnByb3RvGixtZWRpYXBpcGUv",
            "ZnJhbWV3b3JrL2NhbGN1bGF0b3Jfb3B0aW9ucy5wcm90bxoebWVkaWFwaXBl",
            "L2dwdS9ncHVfb3JpZ2luLnByb3RvIuYDChRGYWNlRGV0ZWN0aW9uT3B0aW9u",
            "cxISCgptb2RlbF9wYXRoGAEgASgJEi0KCmdwdV9vcmlnaW4YCyABKA4yGS5t",
            "ZWRpYXBpcGUuR3B1T3JpZ2luLk1vZGUSFAoMdGVuc29yX3dpZHRoGBUgASgF",
            "EhUKDXRlbnNvcl9oZWlnaHQYFiABKAUSEgoKbnVtX2xheWVycxgXIAEoBRIP",
            "CgdzdHJpZGVzGBggAygFEioKH2ludGVycG9sYXRlZF9zY2FsZV9hc3BlY3Rf",
            "cmF0aW8YGSABKAI6ATESEQoJbnVtX2JveGVzGB8gASgFEhIKB3hfc2NhbGUY",
            "ICABKAI6ATASEgoHeV9zY2FsZRghIAEoAjoBMBISCgd3X3NjYWxlGCIgASgC",
            "OgEwEhIKB2hfc2NhbGUYIyABKAI6ATASGAoQbWluX3Njb3JlX3RocmVzaBgk",
            "IAEoAhJACghkZWxlZ2F0ZRgGIAEoCzIuLm1lZGlhcGlwZS5JbmZlcmVuY2VD",
            "YWxjdWxhdG9yT3B0aW9ucy5EZWxlZ2F0ZTJOCgNleHQSHC5tZWRpYXBpcGUu",
            "Q2FsY3VsYXRvck9wdGlvbnMY7vO8sgEgASgLMh8ubWVkaWFwaXBlLkZhY2VE",
            "ZXRlY3Rpb25PcHRpb25zQkUKKmNvbS5nb29nbGUubWVkaWFwaXBlLm1vZHVs",
            "ZXMuZmFjZWRldGVjdGlvbkIXRmFjZURldGVjdGlvbkZyb250UHJvdG8="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Mediapipe.InferenceCalculatorReflection.Descriptor, global::Mediapipe.CalculatorOptionsReflection.Descriptor, global::Mediapipe.GpuOriginReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mediapipe.FaceDetectionOptions), global::Mediapipe.FaceDetectionOptions.Parser, new[]{ "ModelPath", "GpuOrigin", "TensorWidth", "TensorHeight", "NumLayers", "Strides", "InterpolatedScaleAspectRatio", "NumBoxes", "XScale", "YScale", "WScale", "HScale", "MinScoreThresh", "Delegate" }, null, null, new pb::Extension[] { global::Mediapipe.FaceDetectionOptions.Extensions.Ext }, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Defines the face geometry pipeline estimation result format.
  /// </summary>
  public sealed partial class FaceDetectionOptions : pb::IMessage<FaceDetectionOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FaceDetectionOptions> _parser = new pb::MessageParser<FaceDetectionOptions>(() => new FaceDetectionOptions());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FaceDetectionOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mediapipe.FaceDetectionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FaceDetectionOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FaceDetectionOptions(FaceDetectionOptions other) : this() {
      _hasBits0 = other._hasBits0;
      modelPath_ = other.modelPath_;
      gpuOrigin_ = other.gpuOrigin_;
      tensorWidth_ = other.tensorWidth_;
      tensorHeight_ = other.tensorHeight_;
      numLayers_ = other.numLayers_;
      strides_ = other.strides_.Clone();
      interpolatedScaleAspectRatio_ = other.interpolatedScaleAspectRatio_;
      numBoxes_ = other.numBoxes_;
      xScale_ = other.xScale_;
      yScale_ = other.yScale_;
      wScale_ = other.wScale_;
      hScale_ = other.hScale_;
      minScoreThresh_ = other.minScoreThresh_;
      delegate_ = other.delegate_ != null ? other.delegate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FaceDetectionOptions Clone() {
      return new FaceDetectionOptions(this);
    }

    /// <summary>Field number for the "model_path" field.</summary>
    public const int ModelPathFieldNumber = 1;
    private readonly static string ModelPathDefaultValue = "";

    private string modelPath_;
    /// <summary>
    /// Path to the TF Lite model (ex: /path/to/modelname.tflite).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ModelPath {
      get { return modelPath_ ?? ModelPathDefaultValue; }
      set {
        modelPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "model_path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModelPath {
      get { return modelPath_ != null; }
    }
    /// <summary>Clears the value of the "model_path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModelPath() {
      modelPath_ = null;
    }

    /// <summary>Field number for the "gpu_origin" field.</summary>
    public const int GpuOriginFieldNumber = 11;
    private readonly static global::Mediapipe.GpuOrigin.Types.Mode GpuOriginDefaultValue = global::Mediapipe.GpuOrigin.Types.Mode.Default;

    private global::Mediapipe.GpuOrigin.Types.Mode gpuOrigin_;
    /// <summary>
    /// The coordinate origin corner, either CONVENTIONAL or TOP_LEFT.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mediapipe.GpuOrigin.Types.Mode GpuOrigin {
      get { if ((_hasBits0 & 1) != 0) { return gpuOrigin_; } else { return GpuOriginDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gpuOrigin_ = value;
      }
    }
    /// <summary>Gets whether the "gpu_origin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpuOrigin {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "gpu_origin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpuOrigin() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "tensor_width" field.</summary>
    public const int TensorWidthFieldNumber = 21;
    private readonly static int TensorWidthDefaultValue = 0;

    private int tensorWidth_;
    /// <summary>
    /// Size of the tensor provided to the face-detection model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TensorWidth {
      get { if ((_hasBits0 & 2) != 0) { return tensorWidth_; } else { return TensorWidthDefaultValue; } }
      set {
        _hasBits0 |= 2;
        tensorWidth_ = value;
      }
    }
    /// <summary>Gets whether the "tensor_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTensorWidth {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "tensor_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTensorWidth() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "tensor_height" field.</summary>
    public const int TensorHeightFieldNumber = 22;
    private readonly static int TensorHeightDefaultValue = 0;

    private int tensorHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TensorHeight {
      get { if ((_hasBits0 & 4) != 0) { return tensorHeight_; } else { return TensorHeightDefaultValue; } }
      set {
        _hasBits0 |= 4;
        tensorHeight_ = value;
      }
    }
    /// <summary>Gets whether the "tensor_height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTensorHeight {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "tensor_height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTensorHeight() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "num_layers" field.</summary>
    public const int NumLayersFieldNumber = 23;
    private readonly static int NumLayersDefaultValue = 0;

    private int numLayers_;
    /// <summary>
    /// Number of output feature maps to generate the anchors on.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumLayers {
      get { if ((_hasBits0 & 8) != 0) { return numLayers_; } else { return NumLayersDefaultValue; } }
      set {
        _hasBits0 |= 8;
        numLayers_ = value;
      }
    }
    /// <summary>Gets whether the "num_layers" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumLayers {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "num_layers" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumLayers() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "strides" field.</summary>
    public const int StridesFieldNumber = 24;
    private static readonly pb::FieldCodec<int> _repeated_strides_codec
        = pb::FieldCodec.ForInt32(192);
    private readonly pbc::RepeatedField<int> strides_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// Strides of each output feature maps.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Strides {
      get { return strides_; }
    }

    /// <summary>Field number for the "interpolated_scale_aspect_ratio" field.</summary>
    public const int InterpolatedScaleAspectRatioFieldNumber = 25;
    private readonly static float InterpolatedScaleAspectRatioDefaultValue = 1F;

    private float interpolatedScaleAspectRatio_;
    /// <summary>
    /// The aspect ratio of the interpolated anchor from the SsdAnchorsCalculator.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float InterpolatedScaleAspectRatio {
      get { if ((_hasBits0 & 16) != 0) { return interpolatedScaleAspectRatio_; } else { return InterpolatedScaleAspectRatioDefaultValue; } }
      set {
        _hasBits0 |= 16;
        interpolatedScaleAspectRatio_ = value;
      }
    }
    /// <summary>Gets whether the "interpolated_scale_aspect_ratio" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInterpolatedScaleAspectRatio {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "interpolated_scale_aspect_ratio" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInterpolatedScaleAspectRatio() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "num_boxes" field.</summary>
    public const int NumBoxesFieldNumber = 31;
    private readonly static int NumBoxesDefaultValue = 0;

    private int numBoxes_;
    /// <summary>
    /// The number of output boxes predicted by the detection model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumBoxes {
      get { if ((_hasBits0 & 32) != 0) { return numBoxes_; } else { return NumBoxesDefaultValue; } }
      set {
        _hasBits0 |= 32;
        numBoxes_ = value;
      }
    }
    /// <summary>Gets whether the "num_boxes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumBoxes {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "num_boxes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumBoxes() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "x_scale" field.</summary>
    public const int XScaleFieldNumber = 32;
    private readonly static float XScaleDefaultValue = 0F;

    private float xScale_;
    /// <summary>
    /// Parameters for decoding SSD detection model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float XScale {
      get { if ((_hasBits0 & 64) != 0) { return xScale_; } else { return XScaleDefaultValue; } }
      set {
        _hasBits0 |= 64;
        xScale_ = value;
      }
    }
    /// <summary>Gets whether the "x_scale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasXScale {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "x_scale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearXScale() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "y_scale" field.</summary>
    public const int YScaleFieldNumber = 33;
    private readonly static float YScaleDefaultValue = 0F;

    private float yScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float YScale {
      get { if ((_hasBits0 & 128) != 0) { return yScale_; } else { return YScaleDefaultValue; } }
      set {
        _hasBits0 |= 128;
        yScale_ = value;
      }
    }
    /// <summary>Gets whether the "y_scale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasYScale {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "y_scale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearYScale() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "w_scale" field.</summary>
    public const int WScaleFieldNumber = 34;
    private readonly static float WScaleDefaultValue = 0F;

    private float wScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float WScale {
      get { if ((_hasBits0 & 256) != 0) { return wScale_; } else { return WScaleDefaultValue; } }
      set {
        _hasBits0 |= 256;
        wScale_ = value;
      }
    }
    /// <summary>Gets whether the "w_scale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWScale {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "w_scale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWScale() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "h_scale" field.</summary>
    public const int HScaleFieldNumber = 35;
    private readonly static float HScaleDefaultValue = 0F;

    private float hScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float HScale {
      get { if ((_hasBits0 & 512) != 0) { return hScale_; } else { return HScaleDefaultValue; } }
      set {
        _hasBits0 |= 512;
        hScale_ = value;
      }
    }
    /// <summary>Gets whether the "h_scale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHScale {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "h_scale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHScale() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "min_score_thresh" field.</summary>
    public const int MinScoreThreshFieldNumber = 36;
    private readonly static float MinScoreThreshDefaultValue = 0F;

    private float minScoreThresh_;
    /// <summary>
    /// Score threshold for perserving from the SSD detections.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MinScoreThresh {
      get { if ((_hasBits0 & 1024) != 0) { return minScoreThresh_; } else { return MinScoreThreshDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        minScoreThresh_ = value;
      }
    }
    /// <summary>Gets whether the "min_score_thresh" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinScoreThresh {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "min_score_thresh" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinScoreThresh() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "delegate" field.</summary>
    public const int DelegateFieldNumber = 6;
    private global::Mediapipe.InferenceCalculatorOptions.Types.Delegate delegate_;
    /// <summary>
    /// TfLite delegate to run inference.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mediapipe.InferenceCalculatorOptions.Types.Delegate Delegate {
      get { return delegate_; }
      set {
        delegate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FaceDetectionOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FaceDetectionOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModelPath != other.ModelPath) return false;
      if (GpuOrigin != other.GpuOrigin) return false;
      if (TensorWidth != other.TensorWidth) return false;
      if (TensorHeight != other.TensorHeight) return false;
      if (NumLayers != other.NumLayers) return false;
      if(!strides_.Equals(other.strides_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(InterpolatedScaleAspectRatio, other.InterpolatedScaleAspectRatio)) return false;
      if (NumBoxes != other.NumBoxes) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(XScale, other.XScale)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(YScale, other.YScale)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(WScale, other.WScale)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HScale, other.HScale)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinScoreThresh, other.MinScoreThresh)) return false;
      if (!object.Equals(Delegate, other.Delegate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasModelPath) hash ^= ModelPath.GetHashCode();
      if (HasGpuOrigin) hash ^= GpuOrigin.GetHashCode();
      if (HasTensorWidth) hash ^= TensorWidth.GetHashCode();
      if (HasTensorHeight) hash ^= TensorHeight.GetHashCode();
      if (HasNumLayers) hash ^= NumLayers.GetHashCode();
      hash ^= strides_.GetHashCode();
      if (HasInterpolatedScaleAspectRatio) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(InterpolatedScaleAspectRatio);
      if (HasNumBoxes) hash ^= NumBoxes.GetHashCode();
      if (HasXScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(XScale);
      if (HasYScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(YScale);
      if (HasWScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(WScale);
      if (HasHScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HScale);
      if (HasMinScoreThresh) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinScoreThresh);
      if (delegate_ != null) hash ^= Delegate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasModelPath) {
        output.WriteRawTag(10);
        output.WriteString(ModelPath);
      }
      if (delegate_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Delegate);
      }
      if (HasGpuOrigin) {
        output.WriteRawTag(88);
        output.WriteEnum((int) GpuOrigin);
      }
      if (HasTensorWidth) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(TensorWidth);
      }
      if (HasTensorHeight) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(TensorHeight);
      }
      if (HasNumLayers) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(NumLayers);
      }
      strides_.WriteTo(output, _repeated_strides_codec);
      if (HasInterpolatedScaleAspectRatio) {
        output.WriteRawTag(205, 1);
        output.WriteFloat(InterpolatedScaleAspectRatio);
      }
      if (HasNumBoxes) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(NumBoxes);
      }
      if (HasXScale) {
        output.WriteRawTag(133, 2);
        output.WriteFloat(XScale);
      }
      if (HasYScale) {
        output.WriteRawTag(141, 2);
        output.WriteFloat(YScale);
      }
      if (HasWScale) {
        output.WriteRawTag(149, 2);
        output.WriteFloat(WScale);
      }
      if (HasHScale) {
        output.WriteRawTag(157, 2);
        output.WriteFloat(HScale);
      }
      if (HasMinScoreThresh) {
        output.WriteRawTag(165, 2);
        output.WriteFloat(MinScoreThresh);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasModelPath) {
        output.WriteRawTag(10);
        output.WriteString(ModelPath);
      }
      if (delegate_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Delegate);
      }
      if (HasGpuOrigin) {
        output.WriteRawTag(88);
        output.WriteEnum((int) GpuOrigin);
      }
      if (HasTensorWidth) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(TensorWidth);
      }
      if (HasTensorHeight) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(TensorHeight);
      }
      if (HasNumLayers) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(NumLayers);
      }
      strides_.WriteTo(ref output, _repeated_strides_codec);
      if (HasInterpolatedScaleAspectRatio) {
        output.WriteRawTag(205, 1);
        output.WriteFloat(InterpolatedScaleAspectRatio);
      }
      if (HasNumBoxes) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(NumBoxes);
      }
      if (HasXScale) {
        output.WriteRawTag(133, 2);
        output.WriteFloat(XScale);
      }
      if (HasYScale) {
        output.WriteRawTag(141, 2);
        output.WriteFloat(YScale);
      }
      if (HasWScale) {
        output.WriteRawTag(149, 2);
        output.WriteFloat(WScale);
      }
      if (HasHScale) {
        output.WriteRawTag(157, 2);
        output.WriteFloat(HScale);
      }
      if (HasMinScoreThresh) {
        output.WriteRawTag(165, 2);
        output.WriteFloat(MinScoreThresh);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasModelPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelPath);
      }
      if (HasGpuOrigin) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GpuOrigin);
      }
      if (HasTensorWidth) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TensorWidth);
      }
      if (HasTensorHeight) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TensorHeight);
      }
      if (HasNumLayers) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NumLayers);
      }
      size += strides_.CalculateSize(_repeated_strides_codec);
      if (HasInterpolatedScaleAspectRatio) {
        size += 2 + 4;
      }
      if (HasNumBoxes) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NumBoxes);
      }
      if (HasXScale) {
        size += 2 + 4;
      }
      if (HasYScale) {
        size += 2 + 4;
      }
      if (HasWScale) {
        size += 2 + 4;
      }
      if (HasHScale) {
        size += 2 + 4;
      }
      if (HasMinScoreThresh) {
        size += 2 + 4;
      }
      if (delegate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Delegate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FaceDetectionOptions other) {
      if (other == null) {
        return;
      }
      if (other.HasModelPath) {
        ModelPath = other.ModelPath;
      }
      if (other.HasGpuOrigin) {
        GpuOrigin = other.GpuOrigin;
      }
      if (other.HasTensorWidth) {
        TensorWidth = other.TensorWidth;
      }
      if (other.HasTensorHeight) {
        TensorHeight = other.TensorHeight;
      }
      if (other.HasNumLayers) {
        NumLayers = other.NumLayers;
      }
      strides_.Add(other.strides_);
      if (other.HasInterpolatedScaleAspectRatio) {
        InterpolatedScaleAspectRatio = other.InterpolatedScaleAspectRatio;
      }
      if (other.HasNumBoxes) {
        NumBoxes = other.NumBoxes;
      }
      if (other.HasXScale) {
        XScale = other.XScale;
      }
      if (other.HasYScale) {
        YScale = other.YScale;
      }
      if (other.HasWScale) {
        WScale = other.WScale;
      }
      if (other.HasHScale) {
        HScale = other.HScale;
      }
      if (other.HasMinScoreThresh) {
        MinScoreThresh = other.MinScoreThresh;
      }
      if (other.delegate_ != null) {
        if (delegate_ == null) {
          Delegate = new global::Mediapipe.InferenceCalculatorOptions.Types.Delegate();
        }
        Delegate.MergeFrom(other.Delegate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ModelPath = input.ReadString();
            break;
          }
          case 50: {
            if (delegate_ == null) {
              Delegate = new global::Mediapipe.InferenceCalculatorOptions.Types.Delegate();
            }
            input.ReadMessage(Delegate);
            break;
          }
          case 88: {
            GpuOrigin = (global::Mediapipe.GpuOrigin.Types.Mode) input.ReadEnum();
            break;
          }
          case 168: {
            TensorWidth = input.ReadInt32();
            break;
          }
          case 176: {
            TensorHeight = input.ReadInt32();
            break;
          }
          case 184: {
            NumLayers = input.ReadInt32();
            break;
          }
          case 194:
          case 192: {
            strides_.AddEntriesFrom(input, _repeated_strides_codec);
            break;
          }
          case 205: {
            InterpolatedScaleAspectRatio = input.ReadFloat();
            break;
          }
          case 248: {
            NumBoxes = input.ReadInt32();
            break;
          }
          case 261: {
            XScale = input.ReadFloat();
            break;
          }
          case 269: {
            YScale = input.ReadFloat();
            break;
          }
          case 277: {
            WScale = input.ReadFloat();
            break;
          }
          case 285: {
            HScale = input.ReadFloat();
            break;
          }
          case 293: {
            MinScoreThresh = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ModelPath = input.ReadString();
            break;
          }
          case 50: {
            if (delegate_ == null) {
              Delegate = new global::Mediapipe.InferenceCalculatorOptions.Types.Delegate();
            }
            input.ReadMessage(Delegate);
            break;
          }
          case 88: {
            GpuOrigin = (global::Mediapipe.GpuOrigin.Types.Mode) input.ReadEnum();
            break;
          }
          case 168: {
            TensorWidth = input.ReadInt32();
            break;
          }
          case 176: {
            TensorHeight = input.ReadInt32();
            break;
          }
          case 184: {
            NumLayers = input.ReadInt32();
            break;
          }
          case 194:
          case 192: {
            strides_.AddEntriesFrom(ref input, _repeated_strides_codec);
            break;
          }
          case 205: {
            InterpolatedScaleAspectRatio = input.ReadFloat();
            break;
          }
          case 248: {
            NumBoxes = input.ReadInt32();
            break;
          }
          case 261: {
            XScale = input.ReadFloat();
            break;
          }
          case 269: {
            YScale = input.ReadFloat();
            break;
          }
          case 277: {
            WScale = input.ReadFloat();
            break;
          }
          case 285: {
            HScale = input.ReadFloat();
            break;
          }
          case 293: {
            MinScoreThresh = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

    #region Extensions
    /// <summary>Container for extensions for other messages declared in the FaceDetectionOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Extensions {
      public static readonly pb::Extension<global::Mediapipe.CalculatorOptions, global::Mediapipe.FaceDetectionOptions> Ext =
        new pb::Extension<global::Mediapipe.CalculatorOptions, global::Mediapipe.FaceDetectionOptions>(374290926, pb::FieldCodec.ForMessage(2994327410, global::Mediapipe.FaceDetectionOptions.Parser));
    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
