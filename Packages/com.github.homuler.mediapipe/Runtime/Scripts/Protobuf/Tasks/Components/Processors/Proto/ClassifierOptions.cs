// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mediapipe/tasks/cc/components/processors/proto/classifier_options.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mediapipe.Tasks.Components.Processors.Proto {

  /// <summary>Holder for reflection information generated from mediapipe/tasks/cc/components/processors/proto/classifier_options.proto</summary>
  public static partial class ClassifierOptionsReflection {

    #region Descriptor
    /// <summary>File descriptor for mediapipe/tasks/cc/components/processors/proto/classifier_options.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClassifierOptionsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkdtZWRpYXBpcGUvdGFza3MvY2MvY29tcG9uZW50cy9wcm9jZXNzb3JzL3By",
            "b3RvL2NsYXNzaWZpZXJfb3B0aW9ucy5wcm90bxIrbWVkaWFwaXBlLnRhc2tz",
            "LmNvbXBvbmVudHMucHJvY2Vzc29ycy5wcm90byKeAQoRQ2xhc3NpZmllck9w",
            "dGlvbnMSIAoUZGlzcGxheV9uYW1lc19sb2NhbGUYASABKAk6AmVuEhcKC21h",
            "eF9yZXN1bHRzGAIgASgFOgItMRIXCg9zY29yZV90aHJlc2hvbGQYAyABKAIS",
            "GgoSY2F0ZWdvcnlfYWxsb3dsaXN0GAQgAygJEhkKEWNhdGVnb3J5X2Rlbnls",
            "aXN0GAUgAygJQlAKNmNvbS5nb29nbGUubWVkaWFwaXBlLnRhc2tzLmNvbXBv",
            "bmVudHMucHJvY2Vzc29ycy5wcm90b0IWQ2xhc3NpZmllck9wdGlvbnNQcm90",
            "bw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mediapipe.Tasks.Components.Processors.Proto.ClassifierOptions), global::Mediapipe.Tasks.Components.Processors.Proto.ClassifierOptions.Parser, new[]{ "DisplayNamesLocale", "MaxResults", "ScoreThreshold", "CategoryAllowlist", "CategoryDenylist" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Shared options used by all classification tasks.
  /// </summary>
  public sealed partial class ClassifierOptions : pb::IMessage<ClassifierOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClassifierOptions> _parser = new pb::MessageParser<ClassifierOptions>(() => new ClassifierOptions());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClassifierOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mediapipe.Tasks.Components.Processors.Proto.ClassifierOptionsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClassifierOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClassifierOptions(ClassifierOptions other) : this() {
      _hasBits0 = other._hasBits0;
      displayNamesLocale_ = other.displayNamesLocale_;
      maxResults_ = other.maxResults_;
      scoreThreshold_ = other.scoreThreshold_;
      categoryAllowlist_ = other.categoryAllowlist_.Clone();
      categoryDenylist_ = other.categoryDenylist_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClassifierOptions Clone() {
      return new ClassifierOptions(this);
    }

    /// <summary>Field number for the "display_names_locale" field.</summary>
    public const int DisplayNamesLocaleFieldNumber = 1;
    private readonly static string DisplayNamesLocaleDefaultValue = global::System.Text.Encoding.UTF8.GetString(global::System.Convert.FromBase64String("ZW4="), 0, 2);

    private string displayNamesLocale_;
    /// <summary>
    /// The locale to use for display names specified through the TFLite Model
    /// Metadata, if any. Defaults to English.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayNamesLocale {
      get { return displayNamesLocale_ ?? DisplayNamesLocaleDefaultValue; }
      set {
        displayNamesLocale_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "display_names_locale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDisplayNamesLocale {
      get { return displayNamesLocale_ != null; }
    }
    /// <summary>Clears the value of the "display_names_locale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDisplayNamesLocale() {
      displayNamesLocale_ = null;
    }

    /// <summary>Field number for the "max_results" field.</summary>
    public const int MaxResultsFieldNumber = 2;
    private readonly static int MaxResultsDefaultValue = -1;

    private int maxResults_;
    /// <summary>
    /// The maximum number of top-scored classification results to return. If &lt; 0,
    /// all available results will be returned. If 0, an invalid argument error is
    /// returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxResults {
      get { if ((_hasBits0 & 1) != 0) { return maxResults_; } else { return MaxResultsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        maxResults_ = value;
      }
    }
    /// <summary>Gets whether the "max_results" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxResults {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "max_results" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxResults() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "score_threshold" field.</summary>
    public const int ScoreThresholdFieldNumber = 3;
    private readonly static float ScoreThresholdDefaultValue = 0F;

    private float scoreThreshold_;
    /// <summary>
    /// Score threshold, overrides the ones provided in the model metadata
    /// (if any). Results below this value are rejected.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ScoreThreshold {
      get { if ((_hasBits0 & 2) != 0) { return scoreThreshold_; } else { return ScoreThresholdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        scoreThreshold_ = value;
      }
    }
    /// <summary>Gets whether the "score_threshold" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScoreThreshold {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "score_threshold" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScoreThreshold() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "category_allowlist" field.</summary>
    public const int CategoryAllowlistFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_categoryAllowlist_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> categoryAllowlist_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional allowlist of category names. If non-empty, classifications whose
    /// category name is not in this set will be filtered out. Duplicate or unknown
    /// category names are ignored. Mutually exclusive with category_denylist.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> CategoryAllowlist {
      get { return categoryAllowlist_; }
    }

    /// <summary>Field number for the "category_denylist" field.</summary>
    public const int CategoryDenylistFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_categoryDenylist_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> categoryDenylist_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional denylist of category names. If non-empty, classifications whose
    /// category name is in this set will be filtered out. Duplicate or unknown
    /// category names are ignored. Mutually exclusive with category_allowlist.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> CategoryDenylist {
      get { return categoryDenylist_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClassifierOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClassifierOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DisplayNamesLocale != other.DisplayNamesLocale) return false;
      if (MaxResults != other.MaxResults) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ScoreThreshold, other.ScoreThreshold)) return false;
      if(!categoryAllowlist_.Equals(other.categoryAllowlist_)) return false;
      if(!categoryDenylist_.Equals(other.categoryDenylist_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDisplayNamesLocale) hash ^= DisplayNamesLocale.GetHashCode();
      if (HasMaxResults) hash ^= MaxResults.GetHashCode();
      if (HasScoreThreshold) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ScoreThreshold);
      hash ^= categoryAllowlist_.GetHashCode();
      hash ^= categoryDenylist_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDisplayNamesLocale) {
        output.WriteRawTag(10);
        output.WriteString(DisplayNamesLocale);
      }
      if (HasMaxResults) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxResults);
      }
      if (HasScoreThreshold) {
        output.WriteRawTag(29);
        output.WriteFloat(ScoreThreshold);
      }
      categoryAllowlist_.WriteTo(output, _repeated_categoryAllowlist_codec);
      categoryDenylist_.WriteTo(output, _repeated_categoryDenylist_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDisplayNamesLocale) {
        output.WriteRawTag(10);
        output.WriteString(DisplayNamesLocale);
      }
      if (HasMaxResults) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxResults);
      }
      if (HasScoreThreshold) {
        output.WriteRawTag(29);
        output.WriteFloat(ScoreThreshold);
      }
      categoryAllowlist_.WriteTo(ref output, _repeated_categoryAllowlist_codec);
      categoryDenylist_.WriteTo(ref output, _repeated_categoryDenylist_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDisplayNamesLocale) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayNamesLocale);
      }
      if (HasMaxResults) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxResults);
      }
      if (HasScoreThreshold) {
        size += 1 + 4;
      }
      size += categoryAllowlist_.CalculateSize(_repeated_categoryAllowlist_codec);
      size += categoryDenylist_.CalculateSize(_repeated_categoryDenylist_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClassifierOptions other) {
      if (other == null) {
        return;
      }
      if (other.HasDisplayNamesLocale) {
        DisplayNamesLocale = other.DisplayNamesLocale;
      }
      if (other.HasMaxResults) {
        MaxResults = other.MaxResults;
      }
      if (other.HasScoreThreshold) {
        ScoreThreshold = other.ScoreThreshold;
      }
      categoryAllowlist_.Add(other.categoryAllowlist_);
      categoryDenylist_.Add(other.categoryDenylist_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DisplayNamesLocale = input.ReadString();
            break;
          }
          case 16: {
            MaxResults = input.ReadInt32();
            break;
          }
          case 29: {
            ScoreThreshold = input.ReadFloat();
            break;
          }
          case 34: {
            categoryAllowlist_.AddEntriesFrom(input, _repeated_categoryAllowlist_codec);
            break;
          }
          case 42: {
            categoryDenylist_.AddEntriesFrom(input, _repeated_categoryDenylist_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DisplayNamesLocale = input.ReadString();
            break;
          }
          case 16: {
            MaxResults = input.ReadInt32();
            break;
          }
          case 29: {
            ScoreThreshold = input.ReadFloat();
            break;
          }
          case 34: {
            categoryAllowlist_.AddEntriesFrom(ref input, _repeated_categoryAllowlist_codec);
            break;
          }
          case 42: {
            categoryDenylist_.AddEntriesFrom(ref input, _repeated_categoryDenylist_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
