// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mediapipe/tasks/cc/vision/hand_detector/proto/hand_detector_graph_options.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mediapipe.Tasks.Vision.HandDetector.Proto {

  /// <summary>Holder for reflection information generated from mediapipe/tasks/cc/vision/hand_detector/proto/hand_detector_graph_options.proto</summary>
  public static partial class HandDetectorGraphOptionsReflection {

    #region Descriptor
    /// <summary>File descriptor for mediapipe/tasks/cc/vision/hand_detector/proto/hand_detector_graph_options.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HandDetectorGraphOptionsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ck9tZWRpYXBpcGUvdGFza3MvY2MvdmlzaW9uL2hhbmRfZGV0ZWN0b3IvcHJv",
            "dG8vaGFuZF9kZXRlY3Rvcl9ncmFwaF9vcHRpb25zLnByb3RvEiptZWRpYXBp",
            "cGUudGFza3MudmlzaW9uLmhhbmRfZGV0ZWN0b3IucHJvdG8aJG1lZGlhcGlw",
            "ZS9mcmFtZXdvcmsvY2FsY3VsYXRvci5wcm90bxosbWVkaWFwaXBlL2ZyYW1l",
            "d29yay9jYWxjdWxhdG9yX29wdGlvbnMucHJvdG8aMG1lZGlhcGlwZS90YXNr",
            "cy9jYy9jb3JlL3Byb3RvL2Jhc2Vfb3B0aW9ucy5wcm90byKIAgoYSGFuZERl",
            "dGVjdG9yR3JhcGhPcHRpb25zEj0KDGJhc2Vfb3B0aW9ucxgBIAEoCzInLm1l",
            "ZGlhcGlwZS50YXNrcy5jb3JlLnByb3RvLkJhc2VPcHRpb25zEiUKGG1pbl9k",
            "ZXRlY3Rpb25fY29uZmlkZW5jZRgCIAEoAjoDMC41EhEKCW51bV9oYW5kcxgD",
            "IAEoBTJzCgNleHQSHC5tZWRpYXBpcGUuQ2FsY3VsYXRvck9wdGlvbnMYoIjV",
            "3QEgASgLMkQubWVkaWFwaXBlLnRhc2tzLnZpc2lvbi5oYW5kX2RldGVjdG9y",
            "LnByb3RvLkhhbmREZXRlY3RvckdyYXBoT3B0aW9uc0JVCjRjb20uZ29vZ2xl",
            "Lm1lZGlhcGlwZS50YXNrcy52aXNpb24uaGFuZGRldGVjdG9yLnByb3RvQh1I",
            "YW5kRGV0ZWN0b3JHcmFwaE9wdGlvbnNQcm90bw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Mediapipe.CalculatorReflection.Descriptor, global::Mediapipe.CalculatorOptionsReflection.Descriptor, global::Mediapipe.Tasks.Core.Proto.BaseOptionsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mediapipe.Tasks.Vision.HandDetector.Proto.HandDetectorGraphOptions), global::Mediapipe.Tasks.Vision.HandDetector.Proto.HandDetectorGraphOptions.Parser, new[]{ "BaseOptions", "MinDetectionConfidence", "NumHands" }, null, null, new pb::Extension[] { global::Mediapipe.Tasks.Vision.HandDetector.Proto.HandDetectorGraphOptions.Extensions.Ext }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class HandDetectorGraphOptions : pb::IMessage<HandDetectorGraphOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HandDetectorGraphOptions> _parser = new pb::MessageParser<HandDetectorGraphOptions>(() => new HandDetectorGraphOptions());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HandDetectorGraphOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mediapipe.Tasks.Vision.HandDetector.Proto.HandDetectorGraphOptionsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HandDetectorGraphOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HandDetectorGraphOptions(HandDetectorGraphOptions other) : this() {
      _hasBits0 = other._hasBits0;
      baseOptions_ = other.baseOptions_ != null ? other.baseOptions_.Clone() : null;
      minDetectionConfidence_ = other.minDetectionConfidence_;
      numHands_ = other.numHands_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HandDetectorGraphOptions Clone() {
      return new HandDetectorGraphOptions(this);
    }

    /// <summary>Field number for the "base_options" field.</summary>
    public const int BaseOptionsFieldNumber = 1;
    private global::Mediapipe.Tasks.Core.Proto.BaseOptions baseOptions_;
    /// <summary>
    /// Base options for configuring Task library, such as specifying the TfLite
    /// model file with metadata, accelerator options, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mediapipe.Tasks.Core.Proto.BaseOptions BaseOptions {
      get { return baseOptions_; }
      set {
        baseOptions_ = value;
      }
    }

    /// <summary>Field number for the "min_detection_confidence" field.</summary>
    public const int MinDetectionConfidenceFieldNumber = 2;
    private readonly static float MinDetectionConfidenceDefaultValue = 0.5F;

    private float minDetectionConfidence_;
    /// <summary>
    /// Minimum confidence value ([0.0, 1.0]) for confidence score to be considered
    /// successfully detecting a hand in the image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MinDetectionConfidence {
      get { if ((_hasBits0 & 1) != 0) { return minDetectionConfidence_; } else { return MinDetectionConfidenceDefaultValue; } }
      set {
        _hasBits0 |= 1;
        minDetectionConfidence_ = value;
      }
    }
    /// <summary>Gets whether the "min_detection_confidence" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinDetectionConfidence {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "min_detection_confidence" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinDetectionConfidence() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "num_hands" field.</summary>
    public const int NumHandsFieldNumber = 3;
    private readonly static int NumHandsDefaultValue = 0;

    private int numHands_;
    /// <summary>
    /// The maximum number of hands output by the detector.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumHands {
      get { if ((_hasBits0 & 2) != 0) { return numHands_; } else { return NumHandsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        numHands_ = value;
      }
    }
    /// <summary>Gets whether the "num_hands" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumHands {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "num_hands" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumHands() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HandDetectorGraphOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HandDetectorGraphOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BaseOptions, other.BaseOptions)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinDetectionConfidence, other.MinDetectionConfidence)) return false;
      if (NumHands != other.NumHands) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (baseOptions_ != null) hash ^= BaseOptions.GetHashCode();
      if (HasMinDetectionConfidence) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinDetectionConfidence);
      if (HasNumHands) hash ^= NumHands.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (baseOptions_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BaseOptions);
      }
      if (HasMinDetectionConfidence) {
        output.WriteRawTag(21);
        output.WriteFloat(MinDetectionConfidence);
      }
      if (HasNumHands) {
        output.WriteRawTag(24);
        output.WriteInt32(NumHands);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (baseOptions_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BaseOptions);
      }
      if (HasMinDetectionConfidence) {
        output.WriteRawTag(21);
        output.WriteFloat(MinDetectionConfidence);
      }
      if (HasNumHands) {
        output.WriteRawTag(24);
        output.WriteInt32(NumHands);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (baseOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseOptions);
      }
      if (HasMinDetectionConfidence) {
        size += 1 + 4;
      }
      if (HasNumHands) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumHands);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HandDetectorGraphOptions other) {
      if (other == null) {
        return;
      }
      if (other.baseOptions_ != null) {
        if (baseOptions_ == null) {
          BaseOptions = new global::Mediapipe.Tasks.Core.Proto.BaseOptions();
        }
        BaseOptions.MergeFrom(other.BaseOptions);
      }
      if (other.HasMinDetectionConfidence) {
        MinDetectionConfidence = other.MinDetectionConfidence;
      }
      if (other.HasNumHands) {
        NumHands = other.NumHands;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (baseOptions_ == null) {
              BaseOptions = new global::Mediapipe.Tasks.Core.Proto.BaseOptions();
            }
            input.ReadMessage(BaseOptions);
            break;
          }
          case 21: {
            MinDetectionConfidence = input.ReadFloat();
            break;
          }
          case 24: {
            NumHands = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (baseOptions_ == null) {
              BaseOptions = new global::Mediapipe.Tasks.Core.Proto.BaseOptions();
            }
            input.ReadMessage(BaseOptions);
            break;
          }
          case 21: {
            MinDetectionConfidence = input.ReadFloat();
            break;
          }
          case 24: {
            NumHands = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Extensions
    /// <summary>Container for extensions for other messages declared in the HandDetectorGraphOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Extensions {
      public static readonly pb::Extension<global::Mediapipe.CalculatorOptions, global::Mediapipe.Tasks.Vision.HandDetector.Proto.HandDetectorGraphOptions> Ext =
        new pb::Extension<global::Mediapipe.CalculatorOptions, global::Mediapipe.Tasks.Vision.HandDetector.Proto.HandDetectorGraphOptions>(464864288, pb::FieldCodec.ForMessage(3718914306, global::Mediapipe.Tasks.Vision.HandDetector.Proto.HandDetectorGraphOptions.Parser));
    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
