// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mediapipe/calculators/video/flow_packager_calculator.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mediapipe {

  /// <summary>Holder for reflection information generated from mediapipe/calculators/video/flow_packager_calculator.proto</summary>
  public static partial class FlowPackagerCalculatorReflection {

    #region Descriptor
    /// <summary>File descriptor for mediapipe/calculators/video/flow_packager_calculator.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FlowPackagerCalculatorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjptZWRpYXBpcGUvY2FsY3VsYXRvcnMvdmlkZW8vZmxvd19wYWNrYWdlcl9j",
            "YWxjdWxhdG9yLnByb3RvEgltZWRpYXBpcGUaJG1lZGlhcGlwZS9mcmFtZXdv",
            "cmsvY2FsY3VsYXRvci5wcm90bxorbWVkaWFwaXBlL3V0aWwvdHJhY2tpbmcv",
            "Zmxvd19wYWNrYWdlci5wcm90byKFAgodRmxvd1BhY2thZ2VyQ2FsY3VsYXRv",
            "ck9wdGlvbnMSPQoVZmxvd19wYWNrYWdlcl9vcHRpb25zGAEgASgLMh4ubWVk",
            "aWFwaXBlLkZsb3dQYWNrYWdlck9wdGlvbnMSJQoXY2FjaGluZ19jaHVua19z",
            "aXplX21zZWMYAiABKAU6BDI1MDASJQoRY2FjaGVfZmlsZV9mb3JtYXQYAyAB",
            "KAk6CmNodW5rXyUwNGQyVwoDZXh0EhwubWVkaWFwaXBlLkNhbGN1bGF0b3JP",
            "cHRpb25zGLP4qoEBIAEoCzIoLm1lZGlhcGlwZS5GbG93UGFja2FnZXJDYWxj",
            "dWxhdG9yT3B0aW9ucw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Mediapipe.CalculatorReflection.Descriptor, global::Mediapipe.FlowPackagerReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mediapipe.FlowPackagerCalculatorOptions), global::Mediapipe.FlowPackagerCalculatorOptions.Parser, new[]{ "FlowPackagerOptions", "CachingChunkSizeMsec", "CacheFileFormat" }, null, null, new pb::Extension[] { global::Mediapipe.FlowPackagerCalculatorOptions.Extensions.Ext }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FlowPackagerCalculatorOptions : pb::IMessage<FlowPackagerCalculatorOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FlowPackagerCalculatorOptions> _parser = new pb::MessageParser<FlowPackagerCalculatorOptions>(() => new FlowPackagerCalculatorOptions());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FlowPackagerCalculatorOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mediapipe.FlowPackagerCalculatorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FlowPackagerCalculatorOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FlowPackagerCalculatorOptions(FlowPackagerCalculatorOptions other) : this() {
      _hasBits0 = other._hasBits0;
      flowPackagerOptions_ = other.flowPackagerOptions_ != null ? other.flowPackagerOptions_.Clone() : null;
      cachingChunkSizeMsec_ = other.cachingChunkSizeMsec_;
      cacheFileFormat_ = other.cacheFileFormat_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FlowPackagerCalculatorOptions Clone() {
      return new FlowPackagerCalculatorOptions(this);
    }

    /// <summary>Field number for the "flow_packager_options" field.</summary>
    public const int FlowPackagerOptionsFieldNumber = 1;
    private global::Mediapipe.FlowPackagerOptions flowPackagerOptions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mediapipe.FlowPackagerOptions FlowPackagerOptions {
      get { return flowPackagerOptions_; }
      set {
        flowPackagerOptions_ = value;
      }
    }

    /// <summary>Field number for the "caching_chunk_size_msec" field.</summary>
    public const int CachingChunkSizeMsecFieldNumber = 2;
    private readonly static int CachingChunkSizeMsecDefaultValue = 2500;

    private int cachingChunkSizeMsec_;
    /// <summary>
    /// Chunk size for caching files that are written to the externally specified
    /// caching directory. Specified in msec.
    /// Note that each chunk always contains at its end the first frame of the
    /// next chunk (to enable forward tracking across chunk boundaries).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CachingChunkSizeMsec {
      get { if ((_hasBits0 & 1) != 0) { return cachingChunkSizeMsec_; } else { return CachingChunkSizeMsecDefaultValue; } }
      set {
        _hasBits0 |= 1;
        cachingChunkSizeMsec_ = value;
      }
    }
    /// <summary>Gets whether the "caching_chunk_size_msec" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCachingChunkSizeMsec {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "caching_chunk_size_msec" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCachingChunkSizeMsec() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cache_file_format" field.</summary>
    public const int CacheFileFormatFieldNumber = 3;
    private readonly static string CacheFileFormatDefaultValue = global::System.Text.Encoding.UTF8.GetString(global::System.Convert.FromBase64String("Y2h1bmtfJTA0ZA=="), 0, 10);

    private string cacheFileFormat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CacheFileFormat {
      get { return cacheFileFormat_ ?? CacheFileFormatDefaultValue; }
      set {
        cacheFileFormat_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cache_file_format" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCacheFileFormat {
      get { return cacheFileFormat_ != null; }
    }
    /// <summary>Clears the value of the "cache_file_format" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCacheFileFormat() {
      cacheFileFormat_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FlowPackagerCalculatorOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FlowPackagerCalculatorOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FlowPackagerOptions, other.FlowPackagerOptions)) return false;
      if (CachingChunkSizeMsec != other.CachingChunkSizeMsec) return false;
      if (CacheFileFormat != other.CacheFileFormat) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (flowPackagerOptions_ != null) hash ^= FlowPackagerOptions.GetHashCode();
      if (HasCachingChunkSizeMsec) hash ^= CachingChunkSizeMsec.GetHashCode();
      if (HasCacheFileFormat) hash ^= CacheFileFormat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (flowPackagerOptions_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FlowPackagerOptions);
      }
      if (HasCachingChunkSizeMsec) {
        output.WriteRawTag(16);
        output.WriteInt32(CachingChunkSizeMsec);
      }
      if (HasCacheFileFormat) {
        output.WriteRawTag(26);
        output.WriteString(CacheFileFormat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (flowPackagerOptions_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FlowPackagerOptions);
      }
      if (HasCachingChunkSizeMsec) {
        output.WriteRawTag(16);
        output.WriteInt32(CachingChunkSizeMsec);
      }
      if (HasCacheFileFormat) {
        output.WriteRawTag(26);
        output.WriteString(CacheFileFormat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (flowPackagerOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FlowPackagerOptions);
      }
      if (HasCachingChunkSizeMsec) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CachingChunkSizeMsec);
      }
      if (HasCacheFileFormat) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CacheFileFormat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FlowPackagerCalculatorOptions other) {
      if (other == null) {
        return;
      }
      if (other.flowPackagerOptions_ != null) {
        if (flowPackagerOptions_ == null) {
          FlowPackagerOptions = new global::Mediapipe.FlowPackagerOptions();
        }
        FlowPackagerOptions.MergeFrom(other.FlowPackagerOptions);
      }
      if (other.HasCachingChunkSizeMsec) {
        CachingChunkSizeMsec = other.CachingChunkSizeMsec;
      }
      if (other.HasCacheFileFormat) {
        CacheFileFormat = other.CacheFileFormat;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (flowPackagerOptions_ == null) {
              FlowPackagerOptions = new global::Mediapipe.FlowPackagerOptions();
            }
            input.ReadMessage(FlowPackagerOptions);
            break;
          }
          case 16: {
            CachingChunkSizeMsec = input.ReadInt32();
            break;
          }
          case 26: {
            CacheFileFormat = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (flowPackagerOptions_ == null) {
              FlowPackagerOptions = new global::Mediapipe.FlowPackagerOptions();
            }
            input.ReadMessage(FlowPackagerOptions);
            break;
          }
          case 16: {
            CachingChunkSizeMsec = input.ReadInt32();
            break;
          }
          case 26: {
            CacheFileFormat = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Extensions
    /// <summary>Container for extensions for other messages declared in the FlowPackagerCalculatorOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Extensions {
      public static readonly pb::Extension<global::Mediapipe.CalculatorOptions, global::Mediapipe.FlowPackagerCalculatorOptions> Ext =
        new pb::Extension<global::Mediapipe.CalculatorOptions, global::Mediapipe.FlowPackagerCalculatorOptions>(271236147, pb::FieldCodec.ForMessage(2169889178, global::Mediapipe.FlowPackagerCalculatorOptions.Parser));
    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
