// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mediapipe/calculators/util/packet_latency_calculator.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mediapipe {

  /// <summary>Holder for reflection information generated from mediapipe/calculators/util/packet_latency_calculator.proto</summary>
  public static partial class PacketLatencyCalculatorReflection {

    #region Descriptor
    /// <summary>File descriptor for mediapipe/calculators/util/packet_latency_calculator.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PacketLatencyCalculatorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjptZWRpYXBpcGUvY2FsY3VsYXRvcnMvdXRpbC9wYWNrZXRfbGF0ZW5jeV9j",
            "YWxjdWxhdG9yLnByb3RvEgltZWRpYXBpcGUaJG1lZGlhcGlwZS9mcmFtZXdv",
            "cmsvY2FsY3VsYXRvci5wcm90byLvAQoeUGFja2V0TGF0ZW5jeUNhbGN1bGF0",
            "b3JPcHRpb25zEhkKDW51bV9pbnRlcnZhbHMYASABKAM6AjEwEiEKEmludGVy",
            "dmFsX3NpemVfdXNlYxgCIAEoAzoFMTAwMDASHwoTcmVzZXRfZHVyYXRpb25f",
            "dXNlYxgDIAEoAzoCLTESFQoNcGFja2V0X2xhYmVscxgEIAMoCTJXCgNleHQS",
            "HC5tZWRpYXBpcGUuQ2FsY3VsYXRvck9wdGlvbnMYzdGrUiABKAsyKS5tZWRp",
            "YXBpcGUuUGFja2V0TGF0ZW5jeUNhbGN1bGF0b3JPcHRpb25z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Mediapipe.CalculatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mediapipe.PacketLatencyCalculatorOptions), global::Mediapipe.PacketLatencyCalculatorOptions.Parser, new[]{ "NumIntervals", "IntervalSizeUsec", "ResetDurationUsec", "PacketLabels" }, null, null, new pb::Extension[] { global::Mediapipe.PacketLatencyCalculatorOptions.Extensions.Ext }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PacketLatencyCalculatorOptions : pb::IMessage<PacketLatencyCalculatorOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PacketLatencyCalculatorOptions> _parser = new pb::MessageParser<PacketLatencyCalculatorOptions>(() => new PacketLatencyCalculatorOptions());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PacketLatencyCalculatorOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mediapipe.PacketLatencyCalculatorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PacketLatencyCalculatorOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PacketLatencyCalculatorOptions(PacketLatencyCalculatorOptions other) : this() {
      _hasBits0 = other._hasBits0;
      numIntervals_ = other.numIntervals_;
      intervalSizeUsec_ = other.intervalSizeUsec_;
      resetDurationUsec_ = other.resetDurationUsec_;
      packetLabels_ = other.packetLabels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PacketLatencyCalculatorOptions Clone() {
      return new PacketLatencyCalculatorOptions(this);
    }

    /// <summary>Field number for the "num_intervals" field.</summary>
    public const int NumIntervalsFieldNumber = 1;
    private readonly static long NumIntervalsDefaultValue = 10L;

    private long numIntervals_;
    /// <summary>
    /// Number of intervals for the latency histogram output.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NumIntervals {
      get { if ((_hasBits0 & 1) != 0) { return numIntervals_; } else { return NumIntervalsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        numIntervals_ = value;
      }
    }
    /// <summary>Gets whether the "num_intervals" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumIntervals {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "num_intervals" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumIntervals() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "interval_size_usec" field.</summary>
    public const int IntervalSizeUsecFieldNumber = 2;
    private readonly static long IntervalSizeUsecDefaultValue = 10000L;

    private long intervalSizeUsec_;
    /// <summary>
    /// Interval size (in microseconds) for the histogram.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long IntervalSizeUsec {
      get { if ((_hasBits0 & 2) != 0) { return intervalSizeUsec_; } else { return IntervalSizeUsecDefaultValue; } }
      set {
        _hasBits0 |= 2;
        intervalSizeUsec_ = value;
      }
    }
    /// <summary>Gets whether the "interval_size_usec" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIntervalSizeUsec {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "interval_size_usec" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIntervalSizeUsec() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "reset_duration_usec" field.</summary>
    public const int ResetDurationUsecFieldNumber = 3;
    private readonly static long ResetDurationUsecDefaultValue = -1L;

    private long resetDurationUsec_;
    /// <summary>
    /// Reset time (in microseconds) for histogram and average. The histogram and
    /// running average are initialized to zero periodically based on the specified
    /// duration. Negative value implies never resetting the statistics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ResetDurationUsec {
      get { if ((_hasBits0 & 4) != 0) { return resetDurationUsec_; } else { return ResetDurationUsecDefaultValue; } }
      set {
        _hasBits0 |= 4;
        resetDurationUsec_ = value;
      }
    }
    /// <summary>Gets whether the "reset_duration_usec" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResetDurationUsec {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "reset_duration_usec" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResetDurationUsec() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "packet_labels" field.</summary>
    public const int PacketLabelsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_packetLabels_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> packetLabels_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Identifier labels for each input packet stream. The order of labels must
    /// correspond 1:1 with the input streams order. The labels are copied to the
    /// latency information output by the calculator.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> PacketLabels {
      get { return packetLabels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PacketLatencyCalculatorOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PacketLatencyCalculatorOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NumIntervals != other.NumIntervals) return false;
      if (IntervalSizeUsec != other.IntervalSizeUsec) return false;
      if (ResetDurationUsec != other.ResetDurationUsec) return false;
      if(!packetLabels_.Equals(other.packetLabels_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNumIntervals) hash ^= NumIntervals.GetHashCode();
      if (HasIntervalSizeUsec) hash ^= IntervalSizeUsec.GetHashCode();
      if (HasResetDurationUsec) hash ^= ResetDurationUsec.GetHashCode();
      hash ^= packetLabels_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasNumIntervals) {
        output.WriteRawTag(8);
        output.WriteInt64(NumIntervals);
      }
      if (HasIntervalSizeUsec) {
        output.WriteRawTag(16);
        output.WriteInt64(IntervalSizeUsec);
      }
      if (HasResetDurationUsec) {
        output.WriteRawTag(24);
        output.WriteInt64(ResetDurationUsec);
      }
      packetLabels_.WriteTo(output, _repeated_packetLabels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasNumIntervals) {
        output.WriteRawTag(8);
        output.WriteInt64(NumIntervals);
      }
      if (HasIntervalSizeUsec) {
        output.WriteRawTag(16);
        output.WriteInt64(IntervalSizeUsec);
      }
      if (HasResetDurationUsec) {
        output.WriteRawTag(24);
        output.WriteInt64(ResetDurationUsec);
      }
      packetLabels_.WriteTo(ref output, _repeated_packetLabels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasNumIntervals) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NumIntervals);
      }
      if (HasIntervalSizeUsec) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(IntervalSizeUsec);
      }
      if (HasResetDurationUsec) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ResetDurationUsec);
      }
      size += packetLabels_.CalculateSize(_repeated_packetLabels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PacketLatencyCalculatorOptions other) {
      if (other == null) {
        return;
      }
      if (other.HasNumIntervals) {
        NumIntervals = other.NumIntervals;
      }
      if (other.HasIntervalSizeUsec) {
        IntervalSizeUsec = other.IntervalSizeUsec;
      }
      if (other.HasResetDurationUsec) {
        ResetDurationUsec = other.ResetDurationUsec;
      }
      packetLabels_.Add(other.packetLabels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NumIntervals = input.ReadInt64();
            break;
          }
          case 16: {
            IntervalSizeUsec = input.ReadInt64();
            break;
          }
          case 24: {
            ResetDurationUsec = input.ReadInt64();
            break;
          }
          case 34: {
            packetLabels_.AddEntriesFrom(input, _repeated_packetLabels_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NumIntervals = input.ReadInt64();
            break;
          }
          case 16: {
            IntervalSizeUsec = input.ReadInt64();
            break;
          }
          case 24: {
            ResetDurationUsec = input.ReadInt64();
            break;
          }
          case 34: {
            packetLabels_.AddEntriesFrom(ref input, _repeated_packetLabels_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Extensions
    /// <summary>Container for extensions for other messages declared in the PacketLatencyCalculatorOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Extensions {
      public static readonly pb::Extension<global::Mediapipe.CalculatorOptions, global::Mediapipe.PacketLatencyCalculatorOptions> Ext =
        new pb::Extension<global::Mediapipe.CalculatorOptions, global::Mediapipe.PacketLatencyCalculatorOptions>(172681421, pb::FieldCodec.ForMessage(1381451370, global::Mediapipe.PacketLatencyCalculatorOptions.Parser));
    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
