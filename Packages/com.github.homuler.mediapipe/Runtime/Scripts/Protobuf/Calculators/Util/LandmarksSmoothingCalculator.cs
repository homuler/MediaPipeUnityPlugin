// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mediapipe/calculators/util/landmarks_smoothing_calculator.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mediapipe {

  /// <summary>Holder for reflection information generated from mediapipe/calculators/util/landmarks_smoothing_calculator.proto</summary>
  public static partial class LandmarksSmoothingCalculatorReflection {

    #region Descriptor
    /// <summary>File descriptor for mediapipe/calculators/util/landmarks_smoothing_calculator.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LandmarksSmoothingCalculatorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj9tZWRpYXBpcGUvY2FsY3VsYXRvcnMvdXRpbC9sYW5kbWFya3Nfc21vb3Ro",
            "aW5nX2NhbGN1bGF0b3IucHJvdG8SCW1lZGlhcGlwZRosbWVkaWFwaXBlL2Zy",
            "YW1ld29yay9jYWxjdWxhdG9yX29wdGlvbnMucHJvdG8i9QUKI0xhbmRtYXJr",
            "c1Ntb290aGluZ0NhbGN1bGF0b3JPcHRpb25zEkwKCW5vX2ZpbHRlchgBIAEo",
            "CzI3Lm1lZGlhcGlwZS5MYW5kbWFya3NTbW9vdGhpbmdDYWxjdWxhdG9yT3B0",
            "aW9ucy5Ob0ZpbHRlckgAElgKD3ZlbG9jaXR5X2ZpbHRlchgCIAEoCzI9Lm1l",
            "ZGlhcGlwZS5MYW5kbWFya3NTbW9vdGhpbmdDYWxjdWxhdG9yT3B0aW9ucy5W",
            "ZWxvY2l0eUZpbHRlckgAElcKD29uZV9ldXJvX2ZpbHRlchgDIAEoCzI8Lm1l",
            "ZGlhcGlwZS5MYW5kbWFya3NTbW9vdGhpbmdDYWxjdWxhdG9yT3B0aW9ucy5P",
            "bmVFdXJvRmlsdGVySAAaCgoITm9GaWx0ZXIakwEKDlZlbG9jaXR5RmlsdGVy",
            "EhYKC3dpbmRvd19zaXplGAEgASgFOgE1EhoKDnZlbG9jaXR5X3NjYWxlGAIg",
            "ASgCOgIxMBInChhtaW5fYWxsb3dlZF9vYmplY3Rfc2NhbGUYAyABKAI6BTFl",
            "LTA2EiQKFWRpc2FibGVfdmFsdWVfc2NhbGluZxgEIAEoCDoFZmFsc2UauQEK",
            "DU9uZUV1cm9GaWx0ZXISFQoJZnJlcXVlbmN5GAEgASgCOgIzMBIVCgptaW5f",
            "Y3V0b2ZmGAIgASgCOgExEg8KBGJldGEYAyABKAI6ATASGgoPZGVyaXZhdGVf",
            "Y3V0b2ZmGAQgASgCOgExEicKGG1pbl9hbGxvd2VkX29iamVjdF9zY2FsZRgF",
            "IAEoAjoFMWUtMDYSJAoVZGlzYWJsZV92YWx1ZV9zY2FsaW5nGAYgASgIOgVm",
            "YWxzZTJdCgNleHQSHC5tZWRpYXBpcGUuQ2FsY3VsYXRvck9wdGlvbnMYhbSl",
            "mwEgASgLMi4ubWVkaWFwaXBlLkxhbmRtYXJrc1Ntb290aGluZ0NhbGN1bGF0",
            "b3JPcHRpb25zQhAKDmZpbHRlcl9vcHRpb25z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Mediapipe.CalculatorOptionsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mediapipe.LandmarksSmoothingCalculatorOptions), global::Mediapipe.LandmarksSmoothingCalculatorOptions.Parser, new[]{ "NoFilter", "VelocityFilter", "OneEuroFilter" }, new[]{ "FilterOptions" }, null, new pb::Extension[] { global::Mediapipe.LandmarksSmoothingCalculatorOptions.Extensions.Ext }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.NoFilter), global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.NoFilter.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.VelocityFilter), global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.VelocityFilter.Parser, new[]{ "WindowSize", "VelocityScale", "MinAllowedObjectScale", "DisableValueScaling" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.OneEuroFilter), global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.OneEuroFilter.Parser, new[]{ "Frequency", "MinCutoff", "Beta", "DerivateCutoff", "MinAllowedObjectScale", "DisableValueScaling" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LandmarksSmoothingCalculatorOptions : pb::IMessage<LandmarksSmoothingCalculatorOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LandmarksSmoothingCalculatorOptions> _parser = new pb::MessageParser<LandmarksSmoothingCalculatorOptions>(() => new LandmarksSmoothingCalculatorOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LandmarksSmoothingCalculatorOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mediapipe.LandmarksSmoothingCalculatorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LandmarksSmoothingCalculatorOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LandmarksSmoothingCalculatorOptions(LandmarksSmoothingCalculatorOptions other) : this() {
      switch (other.FilterOptionsCase) {
        case FilterOptionsOneofCase.NoFilter:
          NoFilter = other.NoFilter.Clone();
          break;
        case FilterOptionsOneofCase.VelocityFilter:
          VelocityFilter = other.VelocityFilter.Clone();
          break;
        case FilterOptionsOneofCase.OneEuroFilter:
          OneEuroFilter = other.OneEuroFilter.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LandmarksSmoothingCalculatorOptions Clone() {
      return new LandmarksSmoothingCalculatorOptions(this);
    }

    /// <summary>Field number for the "no_filter" field.</summary>
    public const int NoFilterFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.NoFilter NoFilter {
      get { return filterOptionsCase_ == FilterOptionsOneofCase.NoFilter ? (global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.NoFilter) filterOptions_ : null; }
      set {
        filterOptions_ = value;
        filterOptionsCase_ = value == null ? FilterOptionsOneofCase.None : FilterOptionsOneofCase.NoFilter;
      }
    }

    /// <summary>Field number for the "velocity_filter" field.</summary>
    public const int VelocityFilterFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.VelocityFilter VelocityFilter {
      get { return filterOptionsCase_ == FilterOptionsOneofCase.VelocityFilter ? (global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.VelocityFilter) filterOptions_ : null; }
      set {
        filterOptions_ = value;
        filterOptionsCase_ = value == null ? FilterOptionsOneofCase.None : FilterOptionsOneofCase.VelocityFilter;
      }
    }

    /// <summary>Field number for the "one_euro_filter" field.</summary>
    public const int OneEuroFilterFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.OneEuroFilter OneEuroFilter {
      get { return filterOptionsCase_ == FilterOptionsOneofCase.OneEuroFilter ? (global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.OneEuroFilter) filterOptions_ : null; }
      set {
        filterOptions_ = value;
        filterOptionsCase_ = value == null ? FilterOptionsOneofCase.None : FilterOptionsOneofCase.OneEuroFilter;
      }
    }

    private object filterOptions_;
    /// <summary>Enum of possible cases for the "filter_options" oneof.</summary>
    public enum FilterOptionsOneofCase {
      None = 0,
      NoFilter = 1,
      VelocityFilter = 2,
      OneEuroFilter = 3,
    }
    private FilterOptionsOneofCase filterOptionsCase_ = FilterOptionsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FilterOptionsOneofCase FilterOptionsCase {
      get { return filterOptionsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFilterOptions() {
      filterOptionsCase_ = FilterOptionsOneofCase.None;
      filterOptions_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LandmarksSmoothingCalculatorOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LandmarksSmoothingCalculatorOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NoFilter, other.NoFilter)) return false;
      if (!object.Equals(VelocityFilter, other.VelocityFilter)) return false;
      if (!object.Equals(OneEuroFilter, other.OneEuroFilter)) return false;
      if (FilterOptionsCase != other.FilterOptionsCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (filterOptionsCase_ == FilterOptionsOneofCase.NoFilter) hash ^= NoFilter.GetHashCode();
      if (filterOptionsCase_ == FilterOptionsOneofCase.VelocityFilter) hash ^= VelocityFilter.GetHashCode();
      if (filterOptionsCase_ == FilterOptionsOneofCase.OneEuroFilter) hash ^= OneEuroFilter.GetHashCode();
      hash ^= (int) filterOptionsCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (filterOptionsCase_ == FilterOptionsOneofCase.NoFilter) {
        output.WriteRawTag(10);
        output.WriteMessage(NoFilter);
      }
      if (filterOptionsCase_ == FilterOptionsOneofCase.VelocityFilter) {
        output.WriteRawTag(18);
        output.WriteMessage(VelocityFilter);
      }
      if (filterOptionsCase_ == FilterOptionsOneofCase.OneEuroFilter) {
        output.WriteRawTag(26);
        output.WriteMessage(OneEuroFilter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (filterOptionsCase_ == FilterOptionsOneofCase.NoFilter) {
        output.WriteRawTag(10);
        output.WriteMessage(NoFilter);
      }
      if (filterOptionsCase_ == FilterOptionsOneofCase.VelocityFilter) {
        output.WriteRawTag(18);
        output.WriteMessage(VelocityFilter);
      }
      if (filterOptionsCase_ == FilterOptionsOneofCase.OneEuroFilter) {
        output.WriteRawTag(26);
        output.WriteMessage(OneEuroFilter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (filterOptionsCase_ == FilterOptionsOneofCase.NoFilter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NoFilter);
      }
      if (filterOptionsCase_ == FilterOptionsOneofCase.VelocityFilter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VelocityFilter);
      }
      if (filterOptionsCase_ == FilterOptionsOneofCase.OneEuroFilter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OneEuroFilter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LandmarksSmoothingCalculatorOptions other) {
      if (other == null) {
        return;
      }
      switch (other.FilterOptionsCase) {
        case FilterOptionsOneofCase.NoFilter:
          if (NoFilter == null) {
            NoFilter = new global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.NoFilter();
          }
          NoFilter.MergeFrom(other.NoFilter);
          break;
        case FilterOptionsOneofCase.VelocityFilter:
          if (VelocityFilter == null) {
            VelocityFilter = new global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.VelocityFilter();
          }
          VelocityFilter.MergeFrom(other.VelocityFilter);
          break;
        case FilterOptionsOneofCase.OneEuroFilter:
          if (OneEuroFilter == null) {
            OneEuroFilter = new global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.OneEuroFilter();
          }
          OneEuroFilter.MergeFrom(other.OneEuroFilter);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.NoFilter subBuilder = new global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.NoFilter();
            if (filterOptionsCase_ == FilterOptionsOneofCase.NoFilter) {
              subBuilder.MergeFrom(NoFilter);
            }
            input.ReadMessage(subBuilder);
            NoFilter = subBuilder;
            break;
          }
          case 18: {
            global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.VelocityFilter subBuilder = new global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.VelocityFilter();
            if (filterOptionsCase_ == FilterOptionsOneofCase.VelocityFilter) {
              subBuilder.MergeFrom(VelocityFilter);
            }
            input.ReadMessage(subBuilder);
            VelocityFilter = subBuilder;
            break;
          }
          case 26: {
            global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.OneEuroFilter subBuilder = new global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.OneEuroFilter();
            if (filterOptionsCase_ == FilterOptionsOneofCase.OneEuroFilter) {
              subBuilder.MergeFrom(OneEuroFilter);
            }
            input.ReadMessage(subBuilder);
            OneEuroFilter = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.NoFilter subBuilder = new global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.NoFilter();
            if (filterOptionsCase_ == FilterOptionsOneofCase.NoFilter) {
              subBuilder.MergeFrom(NoFilter);
            }
            input.ReadMessage(subBuilder);
            NoFilter = subBuilder;
            break;
          }
          case 18: {
            global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.VelocityFilter subBuilder = new global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.VelocityFilter();
            if (filterOptionsCase_ == FilterOptionsOneofCase.VelocityFilter) {
              subBuilder.MergeFrom(VelocityFilter);
            }
            input.ReadMessage(subBuilder);
            VelocityFilter = subBuilder;
            break;
          }
          case 26: {
            global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.OneEuroFilter subBuilder = new global::Mediapipe.LandmarksSmoothingCalculatorOptions.Types.OneEuroFilter();
            if (filterOptionsCase_ == FilterOptionsOneofCase.OneEuroFilter) {
              subBuilder.MergeFrom(OneEuroFilter);
            }
            input.ReadMessage(subBuilder);
            OneEuroFilter = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LandmarksSmoothingCalculatorOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Default behaviour and fast way to disable smoothing.
      /// </summary>
      public sealed partial class NoFilter : pb::IMessage<NoFilter>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<NoFilter> _parser = new pb::MessageParser<NoFilter>(() => new NoFilter());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<NoFilter> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mediapipe.LandmarksSmoothingCalculatorOptions.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NoFilter() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NoFilter(NoFilter other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NoFilter Clone() {
          return new NoFilter(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as NoFilter);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(NoFilter other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(NoFilter other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class VelocityFilter : pb::IMessage<VelocityFilter>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<VelocityFilter> _parser = new pb::MessageParser<VelocityFilter>(() => new VelocityFilter());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<VelocityFilter> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mediapipe.LandmarksSmoothingCalculatorOptions.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public VelocityFilter() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public VelocityFilter(VelocityFilter other) : this() {
          _hasBits0 = other._hasBits0;
          windowSize_ = other.windowSize_;
          velocityScale_ = other.velocityScale_;
          minAllowedObjectScale_ = other.minAllowedObjectScale_;
          disableValueScaling_ = other.disableValueScaling_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public VelocityFilter Clone() {
          return new VelocityFilter(this);
        }

        /// <summary>Field number for the "window_size" field.</summary>
        public const int WindowSizeFieldNumber = 1;
        private readonly static int WindowSizeDefaultValue = 5;

        private int windowSize_;
        /// <summary>
        /// Number of value changes to keep over time.
        /// Higher value adds to lag and to stability.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int WindowSize {
          get { if ((_hasBits0 & 1) != 0) { return windowSize_; } else { return WindowSizeDefaultValue; } }
          set {
            _hasBits0 |= 1;
            windowSize_ = value;
          }
        }
        /// <summary>Gets whether the "window_size" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasWindowSize {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "window_size" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearWindowSize() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "velocity_scale" field.</summary>
        public const int VelocityScaleFieldNumber = 2;
        private readonly static float VelocityScaleDefaultValue = 10F;

        private float velocityScale_;
        /// <summary>
        /// Scale to apply to the velocity calculated over the given window. With
        /// higher velocity `low pass filter` weights new values higher.
        /// Lower value adds to lag and to stability.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float VelocityScale {
          get { if ((_hasBits0 & 2) != 0) { return velocityScale_; } else { return VelocityScaleDefaultValue; } }
          set {
            _hasBits0 |= 2;
            velocityScale_ = value;
          }
        }
        /// <summary>Gets whether the "velocity_scale" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasVelocityScale {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "velocity_scale" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearVelocityScale() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "min_allowed_object_scale" field.</summary>
        public const int MinAllowedObjectScaleFieldNumber = 3;
        private readonly static float MinAllowedObjectScaleDefaultValue = 1e-06F;

        private float minAllowedObjectScale_;
        /// <summary>
        /// If calculated object scale is less than given value smoothing will be
        /// disabled and landmarks will be returned as is.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float MinAllowedObjectScale {
          get { if ((_hasBits0 & 4) != 0) { return minAllowedObjectScale_; } else { return MinAllowedObjectScaleDefaultValue; } }
          set {
            _hasBits0 |= 4;
            minAllowedObjectScale_ = value;
          }
        }
        /// <summary>Gets whether the "min_allowed_object_scale" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMinAllowedObjectScale {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "min_allowed_object_scale" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMinAllowedObjectScale() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "disable_value_scaling" field.</summary>
        public const int DisableValueScalingFieldNumber = 4;
        private readonly static bool DisableValueScalingDefaultValue = false;

        private bool disableValueScaling_;
        /// <summary>
        /// Disable value scaling based on object size and use `1.0` instead.
        /// If not disabled, value scale is calculated as inverse value of object
        /// size. Object size is calculated as maximum side of rectangular bounding
        /// box of the object in XY plane.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool DisableValueScaling {
          get { if ((_hasBits0 & 8) != 0) { return disableValueScaling_; } else { return DisableValueScalingDefaultValue; } }
          set {
            _hasBits0 |= 8;
            disableValueScaling_ = value;
          }
        }
        /// <summary>Gets whether the "disable_value_scaling" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDisableValueScaling {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "disable_value_scaling" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDisableValueScaling() {
          _hasBits0 &= ~8;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as VelocityFilter);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(VelocityFilter other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (WindowSize != other.WindowSize) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VelocityScale, other.VelocityScale)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinAllowedObjectScale, other.MinAllowedObjectScale)) return false;
          if (DisableValueScaling != other.DisableValueScaling) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasWindowSize) hash ^= WindowSize.GetHashCode();
          if (HasVelocityScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VelocityScale);
          if (HasMinAllowedObjectScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinAllowedObjectScale);
          if (HasDisableValueScaling) hash ^= DisableValueScaling.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasWindowSize) {
            output.WriteRawTag(8);
            output.WriteInt32(WindowSize);
          }
          if (HasVelocityScale) {
            output.WriteRawTag(21);
            output.WriteFloat(VelocityScale);
          }
          if (HasMinAllowedObjectScale) {
            output.WriteRawTag(29);
            output.WriteFloat(MinAllowedObjectScale);
          }
          if (HasDisableValueScaling) {
            output.WriteRawTag(32);
            output.WriteBool(DisableValueScaling);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasWindowSize) {
            output.WriteRawTag(8);
            output.WriteInt32(WindowSize);
          }
          if (HasVelocityScale) {
            output.WriteRawTag(21);
            output.WriteFloat(VelocityScale);
          }
          if (HasMinAllowedObjectScale) {
            output.WriteRawTag(29);
            output.WriteFloat(MinAllowedObjectScale);
          }
          if (HasDisableValueScaling) {
            output.WriteRawTag(32);
            output.WriteBool(DisableValueScaling);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasWindowSize) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(WindowSize);
          }
          if (HasVelocityScale) {
            size += 1 + 4;
          }
          if (HasMinAllowedObjectScale) {
            size += 1 + 4;
          }
          if (HasDisableValueScaling) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(VelocityFilter other) {
          if (other == null) {
            return;
          }
          if (other.HasWindowSize) {
            WindowSize = other.WindowSize;
          }
          if (other.HasVelocityScale) {
            VelocityScale = other.VelocityScale;
          }
          if (other.HasMinAllowedObjectScale) {
            MinAllowedObjectScale = other.MinAllowedObjectScale;
          }
          if (other.HasDisableValueScaling) {
            DisableValueScaling = other.DisableValueScaling;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                WindowSize = input.ReadInt32();
                break;
              }
              case 21: {
                VelocityScale = input.ReadFloat();
                break;
              }
              case 29: {
                MinAllowedObjectScale = input.ReadFloat();
                break;
              }
              case 32: {
                DisableValueScaling = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                WindowSize = input.ReadInt32();
                break;
              }
              case 21: {
                VelocityScale = input.ReadFloat();
                break;
              }
              case 29: {
                MinAllowedObjectScale = input.ReadFloat();
                break;
              }
              case 32: {
                DisableValueScaling = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// For the details of the filter implementation and the procedure of its
      /// configuration please check http://cristal.univ-lille.fr/~casiez/1euro/
      /// </summary>
      public sealed partial class OneEuroFilter : pb::IMessage<OneEuroFilter>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<OneEuroFilter> _parser = new pb::MessageParser<OneEuroFilter>(() => new OneEuroFilter());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<OneEuroFilter> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mediapipe.LandmarksSmoothingCalculatorOptions.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OneEuroFilter() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OneEuroFilter(OneEuroFilter other) : this() {
          _hasBits0 = other._hasBits0;
          frequency_ = other.frequency_;
          minCutoff_ = other.minCutoff_;
          beta_ = other.beta_;
          derivateCutoff_ = other.derivateCutoff_;
          minAllowedObjectScale_ = other.minAllowedObjectScale_;
          disableValueScaling_ = other.disableValueScaling_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OneEuroFilter Clone() {
          return new OneEuroFilter(this);
        }

        /// <summary>Field number for the "frequency" field.</summary>
        public const int FrequencyFieldNumber = 1;
        private readonly static float FrequencyDefaultValue = 30F;

        private float frequency_;
        /// <summary>
        /// Frequency of incomming frames defined in frames per seconds. Used only if
        /// can't be calculated from provided events (e.g. on the very first frame).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float Frequency {
          get { if ((_hasBits0 & 1) != 0) { return frequency_; } else { return FrequencyDefaultValue; } }
          set {
            _hasBits0 |= 1;
            frequency_ = value;
          }
        }
        /// <summary>Gets whether the "frequency" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasFrequency {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "frequency" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearFrequency() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "min_cutoff" field.</summary>
        public const int MinCutoffFieldNumber = 2;
        private readonly static float MinCutoffDefaultValue = 1F;

        private float minCutoff_;
        /// <summary>
        /// Minimum cutoff frequency. Start by tuning this parameter while keeping
        /// `beta = 0` to reduce jittering to the desired level. 1Hz (the default
        /// value) is a good starting point.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float MinCutoff {
          get { if ((_hasBits0 & 2) != 0) { return minCutoff_; } else { return MinCutoffDefaultValue; } }
          set {
            _hasBits0 |= 2;
            minCutoff_ = value;
          }
        }
        /// <summary>Gets whether the "min_cutoff" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMinCutoff {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "min_cutoff" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMinCutoff() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "beta" field.</summary>
        public const int BetaFieldNumber = 3;
        private readonly static float BetaDefaultValue = 0F;

        private float beta_;
        /// <summary>
        /// Cutoff slope. After `min_cutoff` is configured, start increasing `beta`
        /// value to reduce the lag introduced by the `min_cutoff`. Find the desired
        /// balance between jittering and lag.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float Beta {
          get { if ((_hasBits0 & 4) != 0) { return beta_; } else { return BetaDefaultValue; } }
          set {
            _hasBits0 |= 4;
            beta_ = value;
          }
        }
        /// <summary>Gets whether the "beta" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasBeta {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "beta" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearBeta() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "derivate_cutoff" field.</summary>
        public const int DerivateCutoffFieldNumber = 4;
        private readonly static float DerivateCutoffDefaultValue = 1F;

        private float derivateCutoff_;
        /// <summary>
        /// Cutoff frequency for derivate. It is set to 1Hz in the original
        /// algorithm, but can be tuned to further smooth the speed (i.e. derivate)
        /// on the object.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float DerivateCutoff {
          get { if ((_hasBits0 & 8) != 0) { return derivateCutoff_; } else { return DerivateCutoffDefaultValue; } }
          set {
            _hasBits0 |= 8;
            derivateCutoff_ = value;
          }
        }
        /// <summary>Gets whether the "derivate_cutoff" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDerivateCutoff {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "derivate_cutoff" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDerivateCutoff() {
          _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "min_allowed_object_scale" field.</summary>
        public const int MinAllowedObjectScaleFieldNumber = 5;
        private readonly static float MinAllowedObjectScaleDefaultValue = 1e-06F;

        private float minAllowedObjectScale_;
        /// <summary>
        /// If calculated object scale is less than given value smoothing will be
        /// disabled and landmarks will be returned as is.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float MinAllowedObjectScale {
          get { if ((_hasBits0 & 16) != 0) { return minAllowedObjectScale_; } else { return MinAllowedObjectScaleDefaultValue; } }
          set {
            _hasBits0 |= 16;
            minAllowedObjectScale_ = value;
          }
        }
        /// <summary>Gets whether the "min_allowed_object_scale" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMinAllowedObjectScale {
          get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "min_allowed_object_scale" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMinAllowedObjectScale() {
          _hasBits0 &= ~16;
        }

        /// <summary>Field number for the "disable_value_scaling" field.</summary>
        public const int DisableValueScalingFieldNumber = 6;
        private readonly static bool DisableValueScalingDefaultValue = false;

        private bool disableValueScaling_;
        /// <summary>
        /// Disable value scaling based on object size and use `1.0` instead.
        /// If not disabled, value scale is calculated as inverse value of object
        /// size. Object size is calculated as maximum side of rectangular bounding
        /// box of the object in XY plane.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool DisableValueScaling {
          get { if ((_hasBits0 & 32) != 0) { return disableValueScaling_; } else { return DisableValueScalingDefaultValue; } }
          set {
            _hasBits0 |= 32;
            disableValueScaling_ = value;
          }
        }
        /// <summary>Gets whether the "disable_value_scaling" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDisableValueScaling {
          get { return (_hasBits0 & 32) != 0; }
        }
        /// <summary>Clears the value of the "disable_value_scaling" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDisableValueScaling() {
          _hasBits0 &= ~32;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as OneEuroFilter);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(OneEuroFilter other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Frequency, other.Frequency)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinCutoff, other.MinCutoff)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Beta, other.Beta)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DerivateCutoff, other.DerivateCutoff)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinAllowedObjectScale, other.MinAllowedObjectScale)) return false;
          if (DisableValueScaling != other.DisableValueScaling) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasFrequency) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Frequency);
          if (HasMinCutoff) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinCutoff);
          if (HasBeta) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Beta);
          if (HasDerivateCutoff) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DerivateCutoff);
          if (HasMinAllowedObjectScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinAllowedObjectScale);
          if (HasDisableValueScaling) hash ^= DisableValueScaling.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasFrequency) {
            output.WriteRawTag(13);
            output.WriteFloat(Frequency);
          }
          if (HasMinCutoff) {
            output.WriteRawTag(21);
            output.WriteFloat(MinCutoff);
          }
          if (HasBeta) {
            output.WriteRawTag(29);
            output.WriteFloat(Beta);
          }
          if (HasDerivateCutoff) {
            output.WriteRawTag(37);
            output.WriteFloat(DerivateCutoff);
          }
          if (HasMinAllowedObjectScale) {
            output.WriteRawTag(45);
            output.WriteFloat(MinAllowedObjectScale);
          }
          if (HasDisableValueScaling) {
            output.WriteRawTag(48);
            output.WriteBool(DisableValueScaling);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasFrequency) {
            output.WriteRawTag(13);
            output.WriteFloat(Frequency);
          }
          if (HasMinCutoff) {
            output.WriteRawTag(21);
            output.WriteFloat(MinCutoff);
          }
          if (HasBeta) {
            output.WriteRawTag(29);
            output.WriteFloat(Beta);
          }
          if (HasDerivateCutoff) {
            output.WriteRawTag(37);
            output.WriteFloat(DerivateCutoff);
          }
          if (HasMinAllowedObjectScale) {
            output.WriteRawTag(45);
            output.WriteFloat(MinAllowedObjectScale);
          }
          if (HasDisableValueScaling) {
            output.WriteRawTag(48);
            output.WriteBool(DisableValueScaling);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasFrequency) {
            size += 1 + 4;
          }
          if (HasMinCutoff) {
            size += 1 + 4;
          }
          if (HasBeta) {
            size += 1 + 4;
          }
          if (HasDerivateCutoff) {
            size += 1 + 4;
          }
          if (HasMinAllowedObjectScale) {
            size += 1 + 4;
          }
          if (HasDisableValueScaling) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(OneEuroFilter other) {
          if (other == null) {
            return;
          }
          if (other.HasFrequency) {
            Frequency = other.Frequency;
          }
          if (other.HasMinCutoff) {
            MinCutoff = other.MinCutoff;
          }
          if (other.HasBeta) {
            Beta = other.Beta;
          }
          if (other.HasDerivateCutoff) {
            DerivateCutoff = other.DerivateCutoff;
          }
          if (other.HasMinAllowedObjectScale) {
            MinAllowedObjectScale = other.MinAllowedObjectScale;
          }
          if (other.HasDisableValueScaling) {
            DisableValueScaling = other.DisableValueScaling;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 13: {
                Frequency = input.ReadFloat();
                break;
              }
              case 21: {
                MinCutoff = input.ReadFloat();
                break;
              }
              case 29: {
                Beta = input.ReadFloat();
                break;
              }
              case 37: {
                DerivateCutoff = input.ReadFloat();
                break;
              }
              case 45: {
                MinAllowedObjectScale = input.ReadFloat();
                break;
              }
              case 48: {
                DisableValueScaling = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 13: {
                Frequency = input.ReadFloat();
                break;
              }
              case 21: {
                MinCutoff = input.ReadFloat();
                break;
              }
              case 29: {
                Beta = input.ReadFloat();
                break;
              }
              case 37: {
                DerivateCutoff = input.ReadFloat();
                break;
              }
              case 45: {
                MinAllowedObjectScale = input.ReadFloat();
                break;
              }
              case 48: {
                DisableValueScaling = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

    #region Extensions
    /// <summary>Container for extensions for other messages declared in the LandmarksSmoothingCalculatorOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Extensions {
      public static readonly pb::Extension<global::Mediapipe.CalculatorOptions, global::Mediapipe.LandmarksSmoothingCalculatorOptions> Ext =
        new pb::Extension<global::Mediapipe.CalculatorOptions, global::Mediapipe.LandmarksSmoothingCalculatorOptions>(325671429, pb::FieldCodec.ForMessage(2605371434, global::Mediapipe.LandmarksSmoothingCalculatorOptions.Parser));
    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
