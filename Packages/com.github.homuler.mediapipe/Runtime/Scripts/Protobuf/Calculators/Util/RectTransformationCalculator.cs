// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mediapipe/calculators/util/rect_transformation_calculator.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mediapipe {

  /// <summary>Holder for reflection information generated from mediapipe/calculators/util/rect_transformation_calculator.proto</summary>
  public static partial class RectTransformationCalculatorReflection {

    #region Descriptor
    /// <summary>File descriptor for mediapipe/calculators/util/rect_transformation_calculator.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RectTransformationCalculatorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj9tZWRpYXBpcGUvY2FsY3VsYXRvcnMvdXRpbC9yZWN0X3RyYW5zZm9ybWF0",
            "aW9uX2NhbGN1bGF0b3IucHJvdG8SCW1lZGlhcGlwZRokbWVkaWFwaXBlL2Zy",
            "YW1ld29yay9jYWxjdWxhdG9yLnByb3RvIqQCCiNSZWN0VHJhbnNmb3JtYXRp",
            "b25DYWxjdWxhdG9yT3B0aW9ucxISCgdzY2FsZV94GAEgASgCOgExEhIKB3Nj",
            "YWxlX3kYAiABKAI6ATESEAoIcm90YXRpb24YAyABKAISGAoQcm90YXRpb25f",
            "ZGVncmVlcxgEIAEoBRIPCgdzaGlmdF94GAUgASgCEg8KB3NoaWZ0X3kYBiAB",
            "KAISEwoLc3F1YXJlX2xvbmcYByABKAgSFAoMc3F1YXJlX3Nob3J0GAggASgI",
            "MlwKA2V4dBIcLm1lZGlhcGlwZS5DYWxjdWxhdG9yT3B0aW9ucxiIg4V9IAEo",
            "CzIuLm1lZGlhcGlwZS5SZWN0VHJhbnNmb3JtYXRpb25DYWxjdWxhdG9yT3B0",
            "aW9ucw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Mediapipe.CalculatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mediapipe.RectTransformationCalculatorOptions), global::Mediapipe.RectTransformationCalculatorOptions.Parser, new[]{ "ScaleX", "ScaleY", "Rotation", "RotationDegrees", "ShiftX", "ShiftY", "SquareLong", "SquareShort" }, null, null, new pb::Extension[] { global::Mediapipe.RectTransformationCalculatorOptions.Extensions.Ext }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RectTransformationCalculatorOptions : pb::IMessage<RectTransformationCalculatorOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RectTransformationCalculatorOptions> _parser = new pb::MessageParser<RectTransformationCalculatorOptions>(() => new RectTransformationCalculatorOptions());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RectTransformationCalculatorOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mediapipe.RectTransformationCalculatorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RectTransformationCalculatorOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RectTransformationCalculatorOptions(RectTransformationCalculatorOptions other) : this() {
      _hasBits0 = other._hasBits0;
      scaleX_ = other.scaleX_;
      scaleY_ = other.scaleY_;
      rotation_ = other.rotation_;
      rotationDegrees_ = other.rotationDegrees_;
      shiftX_ = other.shiftX_;
      shiftY_ = other.shiftY_;
      squareLong_ = other.squareLong_;
      squareShort_ = other.squareShort_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RectTransformationCalculatorOptions Clone() {
      return new RectTransformationCalculatorOptions(this);
    }

    /// <summary>Field number for the "scale_x" field.</summary>
    public const int ScaleXFieldNumber = 1;
    private readonly static float ScaleXDefaultValue = 1F;

    private float scaleX_;
    /// <summary>
    /// Scaling factor along the side of a rotated rect that was aligned with the
    /// X and Y axis before rotation respectively.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ScaleX {
      get { if ((_hasBits0 & 1) != 0) { return scaleX_; } else { return ScaleXDefaultValue; } }
      set {
        _hasBits0 |= 1;
        scaleX_ = value;
      }
    }
    /// <summary>Gets whether the "scale_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScaleX {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "scale_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScaleX() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "scale_y" field.</summary>
    public const int ScaleYFieldNumber = 2;
    private readonly static float ScaleYDefaultValue = 1F;

    private float scaleY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ScaleY {
      get { if ((_hasBits0 & 2) != 0) { return scaleY_; } else { return ScaleYDefaultValue; } }
      set {
        _hasBits0 |= 2;
        scaleY_ = value;
      }
    }
    /// <summary>Gets whether the "scale_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScaleY {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "scale_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScaleY() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "rotation" field.</summary>
    public const int RotationFieldNumber = 3;
    private readonly static float RotationDefaultValue = 0F;

    private float rotation_;
    /// <summary>
    /// Additional rotation (counter-clockwise) around the rect center either in
    /// radians or in degrees.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Rotation {
      get { if ((_hasBits0 & 4) != 0) { return rotation_; } else { return RotationDefaultValue; } }
      set {
        _hasBits0 |= 4;
        rotation_ = value;
      }
    }
    /// <summary>Gets whether the "rotation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRotation {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "rotation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRotation() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "rotation_degrees" field.</summary>
    public const int RotationDegreesFieldNumber = 4;
    private readonly static int RotationDegreesDefaultValue = 0;

    private int rotationDegrees_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RotationDegrees {
      get { if ((_hasBits0 & 8) != 0) { return rotationDegrees_; } else { return RotationDegreesDefaultValue; } }
      set {
        _hasBits0 |= 8;
        rotationDegrees_ = value;
      }
    }
    /// <summary>Gets whether the "rotation_degrees" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRotationDegrees {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "rotation_degrees" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRotationDegrees() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "shift_x" field.</summary>
    public const int ShiftXFieldNumber = 5;
    private readonly static float ShiftXDefaultValue = 0F;

    private float shiftX_;
    /// <summary>
    /// Shift along the side of a rotated rect that was aligned with the X and Y
    /// axis before rotation respectively. The shift is relative to the length of
    /// corresponding side. For example, for a rect with size (0.4, 0.6), with
    /// shift_x = 0.5 and shift_y = -0.5 the rect is shifted along the two sides
    /// by 0.2 and -0.3 respectively.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShiftX {
      get { if ((_hasBits0 & 16) != 0) { return shiftX_; } else { return ShiftXDefaultValue; } }
      set {
        _hasBits0 |= 16;
        shiftX_ = value;
      }
    }
    /// <summary>Gets whether the "shift_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShiftX {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "shift_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShiftX() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "shift_y" field.</summary>
    public const int ShiftYFieldNumber = 6;
    private readonly static float ShiftYDefaultValue = 0F;

    private float shiftY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShiftY {
      get { if ((_hasBits0 & 32) != 0) { return shiftY_; } else { return ShiftYDefaultValue; } }
      set {
        _hasBits0 |= 32;
        shiftY_ = value;
      }
    }
    /// <summary>Gets whether the "shift_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShiftY {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "shift_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShiftY() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "square_long" field.</summary>
    public const int SquareLongFieldNumber = 7;
    private readonly static bool SquareLongDefaultValue = false;

    private bool squareLong_;
    /// <summary>
    /// Change the final transformed rect into a square that shares the same center
    /// and rotation with the rect, and with the side of the square equal to either
    /// the long or short side of the rect respectively.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SquareLong {
      get { if ((_hasBits0 & 64) != 0) { return squareLong_; } else { return SquareLongDefaultValue; } }
      set {
        _hasBits0 |= 64;
        squareLong_ = value;
      }
    }
    /// <summary>Gets whether the "square_long" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSquareLong {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "square_long" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSquareLong() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "square_short" field.</summary>
    public const int SquareShortFieldNumber = 8;
    private readonly static bool SquareShortDefaultValue = false;

    private bool squareShort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SquareShort {
      get { if ((_hasBits0 & 128) != 0) { return squareShort_; } else { return SquareShortDefaultValue; } }
      set {
        _hasBits0 |= 128;
        squareShort_ = value;
      }
    }
    /// <summary>Gets whether the "square_short" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSquareShort {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "square_short" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSquareShort() {
      _hasBits0 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RectTransformationCalculatorOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RectTransformationCalculatorOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ScaleX, other.ScaleX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ScaleY, other.ScaleY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rotation, other.Rotation)) return false;
      if (RotationDegrees != other.RotationDegrees) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShiftX, other.ShiftX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShiftY, other.ShiftY)) return false;
      if (SquareLong != other.SquareLong) return false;
      if (SquareShort != other.SquareShort) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasScaleX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ScaleX);
      if (HasScaleY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ScaleY);
      if (HasRotation) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rotation);
      if (HasRotationDegrees) hash ^= RotationDegrees.GetHashCode();
      if (HasShiftX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShiftX);
      if (HasShiftY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShiftY);
      if (HasSquareLong) hash ^= SquareLong.GetHashCode();
      if (HasSquareShort) hash ^= SquareShort.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasScaleX) {
        output.WriteRawTag(13);
        output.WriteFloat(ScaleX);
      }
      if (HasScaleY) {
        output.WriteRawTag(21);
        output.WriteFloat(ScaleY);
      }
      if (HasRotation) {
        output.WriteRawTag(29);
        output.WriteFloat(Rotation);
      }
      if (HasRotationDegrees) {
        output.WriteRawTag(32);
        output.WriteInt32(RotationDegrees);
      }
      if (HasShiftX) {
        output.WriteRawTag(45);
        output.WriteFloat(ShiftX);
      }
      if (HasShiftY) {
        output.WriteRawTag(53);
        output.WriteFloat(ShiftY);
      }
      if (HasSquareLong) {
        output.WriteRawTag(56);
        output.WriteBool(SquareLong);
      }
      if (HasSquareShort) {
        output.WriteRawTag(64);
        output.WriteBool(SquareShort);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasScaleX) {
        output.WriteRawTag(13);
        output.WriteFloat(ScaleX);
      }
      if (HasScaleY) {
        output.WriteRawTag(21);
        output.WriteFloat(ScaleY);
      }
      if (HasRotation) {
        output.WriteRawTag(29);
        output.WriteFloat(Rotation);
      }
      if (HasRotationDegrees) {
        output.WriteRawTag(32);
        output.WriteInt32(RotationDegrees);
      }
      if (HasShiftX) {
        output.WriteRawTag(45);
        output.WriteFloat(ShiftX);
      }
      if (HasShiftY) {
        output.WriteRawTag(53);
        output.WriteFloat(ShiftY);
      }
      if (HasSquareLong) {
        output.WriteRawTag(56);
        output.WriteBool(SquareLong);
      }
      if (HasSquareShort) {
        output.WriteRawTag(64);
        output.WriteBool(SquareShort);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasScaleX) {
        size += 1 + 4;
      }
      if (HasScaleY) {
        size += 1 + 4;
      }
      if (HasRotation) {
        size += 1 + 4;
      }
      if (HasRotationDegrees) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RotationDegrees);
      }
      if (HasShiftX) {
        size += 1 + 4;
      }
      if (HasShiftY) {
        size += 1 + 4;
      }
      if (HasSquareLong) {
        size += 1 + 1;
      }
      if (HasSquareShort) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RectTransformationCalculatorOptions other) {
      if (other == null) {
        return;
      }
      if (other.HasScaleX) {
        ScaleX = other.ScaleX;
      }
      if (other.HasScaleY) {
        ScaleY = other.ScaleY;
      }
      if (other.HasRotation) {
        Rotation = other.Rotation;
      }
      if (other.HasRotationDegrees) {
        RotationDegrees = other.RotationDegrees;
      }
      if (other.HasShiftX) {
        ShiftX = other.ShiftX;
      }
      if (other.HasShiftY) {
        ShiftY = other.ShiftY;
      }
      if (other.HasSquareLong) {
        SquareLong = other.SquareLong;
      }
      if (other.HasSquareShort) {
        SquareShort = other.SquareShort;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            ScaleX = input.ReadFloat();
            break;
          }
          case 21: {
            ScaleY = input.ReadFloat();
            break;
          }
          case 29: {
            Rotation = input.ReadFloat();
            break;
          }
          case 32: {
            RotationDegrees = input.ReadInt32();
            break;
          }
          case 45: {
            ShiftX = input.ReadFloat();
            break;
          }
          case 53: {
            ShiftY = input.ReadFloat();
            break;
          }
          case 56: {
            SquareLong = input.ReadBool();
            break;
          }
          case 64: {
            SquareShort = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            ScaleX = input.ReadFloat();
            break;
          }
          case 21: {
            ScaleY = input.ReadFloat();
            break;
          }
          case 29: {
            Rotation = input.ReadFloat();
            break;
          }
          case 32: {
            RotationDegrees = input.ReadInt32();
            break;
          }
          case 45: {
            ShiftX = input.ReadFloat();
            break;
          }
          case 53: {
            ShiftY = input.ReadFloat();
            break;
          }
          case 56: {
            SquareLong = input.ReadBool();
            break;
          }
          case 64: {
            SquareShort = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Extensions
    /// <summary>Container for extensions for other messages declared in the RectTransformationCalculatorOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Extensions {
      public static readonly pb::Extension<global::Mediapipe.CalculatorOptions, global::Mediapipe.RectTransformationCalculatorOptions> Ext =
        new pb::Extension<global::Mediapipe.CalculatorOptions, global::Mediapipe.RectTransformationCalculatorOptions>(262226312, pb::FieldCodec.ForMessage(2097810498, global::Mediapipe.RectTransformationCalculatorOptions.Parser));
    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
