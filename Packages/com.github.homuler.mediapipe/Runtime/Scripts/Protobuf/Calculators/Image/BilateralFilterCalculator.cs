// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mediapipe/calculators/image/bilateral_filter_calculator.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mediapipe {

  /// <summary>Holder for reflection information generated from mediapipe/calculators/image/bilateral_filter_calculator.proto</summary>
  public static partial class BilateralFilterCalculatorReflection {

    #region Descriptor
    /// <summary>File descriptor for mediapipe/calculators/image/bilateral_filter_calculator.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BilateralFilterCalculatorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj1tZWRpYXBpcGUvY2FsY3VsYXRvcnMvaW1hZ2UvYmlsYXRlcmFsX2ZpbHRl",
            "cl9jYWxjdWxhdG9yLnByb3RvEgltZWRpYXBpcGUaJG1lZGlhcGlwZS9mcmFt",
            "ZXdvcmsvY2FsY3VsYXRvci5wcm90byKnAQogQmlsYXRlcmFsRmlsdGVyQ2Fs",
            "Y3VsYXRvck9wdGlvbnMSEwoLc2lnbWFfY29sb3IYASABKAISEwoLc2lnbWFf",
            "c3BhY2UYAiABKAIyWQoDZXh0EhwubWVkaWFwaXBlLkNhbGN1bGF0b3JPcHRp",
            "b25zGMHv9HkgASgLMisubWVkaWFwaXBlLkJpbGF0ZXJhbEZpbHRlckNhbGN1",
            "bGF0b3JPcHRpb25z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Mediapipe.CalculatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mediapipe.BilateralFilterCalculatorOptions), global::Mediapipe.BilateralFilterCalculatorOptions.Parser, new[]{ "SigmaColor", "SigmaSpace" }, null, null, new pb::Extension[] { global::Mediapipe.BilateralFilterCalculatorOptions.Extensions.Ext }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BilateralFilterCalculatorOptions : pb::IMessage<BilateralFilterCalculatorOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BilateralFilterCalculatorOptions> _parser = new pb::MessageParser<BilateralFilterCalculatorOptions>(() => new BilateralFilterCalculatorOptions());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BilateralFilterCalculatorOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mediapipe.BilateralFilterCalculatorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BilateralFilterCalculatorOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BilateralFilterCalculatorOptions(BilateralFilterCalculatorOptions other) : this() {
      _hasBits0 = other._hasBits0;
      sigmaColor_ = other.sigmaColor_;
      sigmaSpace_ = other.sigmaSpace_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BilateralFilterCalculatorOptions Clone() {
      return new BilateralFilterCalculatorOptions(this);
    }

    /// <summary>Field number for the "sigma_color" field.</summary>
    public const int SigmaColorFieldNumber = 1;
    private readonly static float SigmaColorDefaultValue = 0F;

    private float sigmaColor_;
    /// <summary>
    /// Max variance in color allowed, based on normalized color values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SigmaColor {
      get { if ((_hasBits0 & 1) != 0) { return sigmaColor_; } else { return SigmaColorDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sigmaColor_ = value;
      }
    }
    /// <summary>Gets whether the "sigma_color" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSigmaColor {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sigma_color" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSigmaColor() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "sigma_space" field.</summary>
    public const int SigmaSpaceFieldNumber = 2;
    private readonly static float SigmaSpaceDefaultValue = 0F;

    private float sigmaSpace_;
    /// <summary>
    /// Window radius.
    /// Results in a '(sigma_space*2+1) x (sigma_space*2+1)' size kernel.
    /// This should be set based on output image pixel space.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SigmaSpace {
      get { if ((_hasBits0 & 2) != 0) { return sigmaSpace_; } else { return SigmaSpaceDefaultValue; } }
      set {
        _hasBits0 |= 2;
        sigmaSpace_ = value;
      }
    }
    /// <summary>Gets whether the "sigma_space" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSigmaSpace {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "sigma_space" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSigmaSpace() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BilateralFilterCalculatorOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BilateralFilterCalculatorOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SigmaColor, other.SigmaColor)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SigmaSpace, other.SigmaSpace)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSigmaColor) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SigmaColor);
      if (HasSigmaSpace) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SigmaSpace);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSigmaColor) {
        output.WriteRawTag(13);
        output.WriteFloat(SigmaColor);
      }
      if (HasSigmaSpace) {
        output.WriteRawTag(21);
        output.WriteFloat(SigmaSpace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSigmaColor) {
        output.WriteRawTag(13);
        output.WriteFloat(SigmaColor);
      }
      if (HasSigmaSpace) {
        output.WriteRawTag(21);
        output.WriteFloat(SigmaSpace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSigmaColor) {
        size += 1 + 4;
      }
      if (HasSigmaSpace) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BilateralFilterCalculatorOptions other) {
      if (other == null) {
        return;
      }
      if (other.HasSigmaColor) {
        SigmaColor = other.SigmaColor;
      }
      if (other.HasSigmaSpace) {
        SigmaSpace = other.SigmaSpace;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            SigmaColor = input.ReadFloat();
            break;
          }
          case 21: {
            SigmaSpace = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            SigmaColor = input.ReadFloat();
            break;
          }
          case 21: {
            SigmaSpace = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

    #region Extensions
    /// <summary>Container for extensions for other messages declared in the BilateralFilterCalculatorOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Extensions {
      public static readonly pb::Extension<global::Mediapipe.CalculatorOptions, global::Mediapipe.BilateralFilterCalculatorOptions> Ext =
        new pb::Extension<global::Mediapipe.CalculatorOptions, global::Mediapipe.BilateralFilterCalculatorOptions>(255670209, pb::FieldCodec.ForMessage(2045361674, global::Mediapipe.BilateralFilterCalculatorOptions.Parser));
    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
