// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mediapipe/calculators/audio/stabilized_log_calculator.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mediapipe {

  /// <summary>Holder for reflection information generated from mediapipe/calculators/audio/stabilized_log_calculator.proto</summary>
  public static partial class StabilizedLogCalculatorReflection {

    #region Descriptor
    /// <summary>File descriptor for mediapipe/calculators/audio/stabilized_log_calculator.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StabilizedLogCalculatorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjttZWRpYXBpcGUvY2FsY3VsYXRvcnMvYXVkaW8vc3RhYmlsaXplZF9sb2df",
            "Y2FsY3VsYXRvci5wcm90bxIJbWVkaWFwaXBlGiRtZWRpYXBpcGUvZnJhbWV3",
            "b3JrL2NhbGN1bGF0b3IucHJvdG8i0AEKHlN0YWJpbGl6ZWRMb2dDYWxjdWxh",
            "dG9yT3B0aW9ucxIZCgpzdGFiaWxpemVyGAEgASgCOgUxZS0wNRIhChNjaGVj",
            "a19ub25uZWdhdGl2aXR5GAIgASgIOgR0cnVlEhcKDG91dHB1dF9zY2FsZRgD",
            "IAEoAToBMTJXCgNleHQSHC5tZWRpYXBpcGUuQ2FsY3VsYXRvck9wdGlvbnMY",
            "46HQMCABKAsyKS5tZWRpYXBpcGUuU3RhYmlsaXplZExvZ0NhbGN1bGF0b3JP",
            "cHRpb25z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Mediapipe.CalculatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mediapipe.StabilizedLogCalculatorOptions), global::Mediapipe.StabilizedLogCalculatorOptions.Parser, new[]{ "Stabilizer", "CheckNonnegativity", "OutputScale" }, null, null, new pb::Extension[] { global::Mediapipe.StabilizedLogCalculatorOptions.Extensions.Ext }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class StabilizedLogCalculatorOptions : pb::IMessage<StabilizedLogCalculatorOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StabilizedLogCalculatorOptions> _parser = new pb::MessageParser<StabilizedLogCalculatorOptions>(() => new StabilizedLogCalculatorOptions());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StabilizedLogCalculatorOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mediapipe.StabilizedLogCalculatorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StabilizedLogCalculatorOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StabilizedLogCalculatorOptions(StabilizedLogCalculatorOptions other) : this() {
      _hasBits0 = other._hasBits0;
      stabilizer_ = other.stabilizer_;
      checkNonnegativity_ = other.checkNonnegativity_;
      outputScale_ = other.outputScale_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StabilizedLogCalculatorOptions Clone() {
      return new StabilizedLogCalculatorOptions(this);
    }

    /// <summary>Field number for the "stabilizer" field.</summary>
    public const int StabilizerFieldNumber = 1;
    private readonly static float StabilizerDefaultValue = 1e-05F;

    private float stabilizer_;
    /// <summary>
    /// The calculator computes log(x + stabilizer). stabilizer must be >=
    /// 0, with 0 indicating a lack of stabilization.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Stabilizer {
      get { if ((_hasBits0 & 1) != 0) { return stabilizer_; } else { return StabilizerDefaultValue; } }
      set {
        _hasBits0 |= 1;
        stabilizer_ = value;
      }
    }
    /// <summary>Gets whether the "stabilizer" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStabilizer {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "stabilizer" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStabilizer() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "check_nonnegativity" field.</summary>
    public const int CheckNonnegativityFieldNumber = 2;
    private readonly static bool CheckNonnegativityDefaultValue = true;

    private bool checkNonnegativity_;
    /// <summary>
    /// If true, CHECK that all input values in are >= 0. If false, the
    /// code will take the log of the potentially negative input values
    /// plus the stabilizer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CheckNonnegativity {
      get { if ((_hasBits0 & 2) != 0) { return checkNonnegativity_; } else { return CheckNonnegativityDefaultValue; } }
      set {
        _hasBits0 |= 2;
        checkNonnegativity_ = value;
      }
    }
    /// <summary>Gets whether the "check_nonnegativity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCheckNonnegativity {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "check_nonnegativity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCheckNonnegativity() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "output_scale" field.</summary>
    public const int OutputScaleFieldNumber = 3;
    private readonly static double OutputScaleDefaultValue = 1D;

    private double outputScale_;
    /// <summary>
    /// Support a fixed multiplicative scaling of the output.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double OutputScale {
      get { if ((_hasBits0 & 4) != 0) { return outputScale_; } else { return OutputScaleDefaultValue; } }
      set {
        _hasBits0 |= 4;
        outputScale_ = value;
      }
    }
    /// <summary>Gets whether the "output_scale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOutputScale {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "output_scale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOutputScale() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StabilizedLogCalculatorOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StabilizedLogCalculatorOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Stabilizer, other.Stabilizer)) return false;
      if (CheckNonnegativity != other.CheckNonnegativity) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(OutputScale, other.OutputScale)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStabilizer) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Stabilizer);
      if (HasCheckNonnegativity) hash ^= CheckNonnegativity.GetHashCode();
      if (HasOutputScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(OutputScale);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasStabilizer) {
        output.WriteRawTag(13);
        output.WriteFloat(Stabilizer);
      }
      if (HasCheckNonnegativity) {
        output.WriteRawTag(16);
        output.WriteBool(CheckNonnegativity);
      }
      if (HasOutputScale) {
        output.WriteRawTag(25);
        output.WriteDouble(OutputScale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasStabilizer) {
        output.WriteRawTag(13);
        output.WriteFloat(Stabilizer);
      }
      if (HasCheckNonnegativity) {
        output.WriteRawTag(16);
        output.WriteBool(CheckNonnegativity);
      }
      if (HasOutputScale) {
        output.WriteRawTag(25);
        output.WriteDouble(OutputScale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasStabilizer) {
        size += 1 + 4;
      }
      if (HasCheckNonnegativity) {
        size += 1 + 1;
      }
      if (HasOutputScale) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StabilizedLogCalculatorOptions other) {
      if (other == null) {
        return;
      }
      if (other.HasStabilizer) {
        Stabilizer = other.Stabilizer;
      }
      if (other.HasCheckNonnegativity) {
        CheckNonnegativity = other.CheckNonnegativity;
      }
      if (other.HasOutputScale) {
        OutputScale = other.OutputScale;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Stabilizer = input.ReadFloat();
            break;
          }
          case 16: {
            CheckNonnegativity = input.ReadBool();
            break;
          }
          case 25: {
            OutputScale = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Stabilizer = input.ReadFloat();
            break;
          }
          case 16: {
            CheckNonnegativity = input.ReadBool();
            break;
          }
          case 25: {
            OutputScale = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

    #region Extensions
    /// <summary>Container for extensions for other messages declared in the StabilizedLogCalculatorOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Extensions {
      public static readonly pb::Extension<global::Mediapipe.CalculatorOptions, global::Mediapipe.StabilizedLogCalculatorOptions> Ext =
        new pb::Extension<global::Mediapipe.CalculatorOptions, global::Mediapipe.StabilizedLogCalculatorOptions>(101978339, pb::FieldCodec.ForMessage(815826714, global::Mediapipe.StabilizedLogCalculatorOptions.Parser));
    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
