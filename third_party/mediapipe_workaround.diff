diff --git a/mediapipe/framework/port/opencv_core_inc.h b/mediapipe/framework/port/opencv_core_inc.h
index 12862472..1a409417 100644
--- a/mediapipe/framework/port/opencv_core_inc.h
+++ b/mediapipe/framework/port/opencv_core_inc.h
@@ -20,7 +20,7 @@
 #ifdef CV_VERSION_EPOCH  // for OpenCV 2.x
 #include <opencv2/core/core.hpp>
 #else
-#if CV_VERSION_MAJOR == 3
+#if CV_VERSION_MAJOR == 3 || CV_VERSION_MAJOR == 4
 #include <opencv2/cvconfig.h>
 #endif
 
diff --git a/mediapipe/tasks/cc/core/task_api_factory.h b/mediapipe/tasks/cc/core/task_api_factory.h
index a11a23fc..dbb5fe6c 100644
--- a/mediapipe/tasks/cc/core/task_api_factory.h
+++ b/mediapipe/tasks/cc/core/task_api_factory.h
@@ -76,15 +76,17 @@ class TaskApiFactory {
         found_task_subgraph = true;
       }
     }
+#if !MEDIAPIPE_DISABLE_GPU
     MP_ASSIGN_OR_RETURN(
         auto runner,
-#if !MEDIAPIPE_DISABLE_GPU
         core::TaskRunner::Create(std::move(graph_config), std::move(resolver),
                                  std::move(packets_callback),
                                  std::move(default_executor),
                                  std::move(input_side_packets),
                                  /*resources=*/nullptr, std::move(error_fn)));
 #else
+    MP_ASSIGN_OR_RETURN(
+        auto runner,
         core::TaskRunner::Create(
             std::move(graph_config), std::move(resolver),
             std::move(packets_callback), std::move(default_executor),
diff --git a/mediapipe/tasks/cc/vision/holistic_landmarker/holistic_landmarker_graph.cc b/mediapipe/tasks/cc/vision/holistic_landmarker/holistic_landmarker_graph.cc
index 2ff140c0..128a4326 100644
--- a/mediapipe/tasks/cc/vision/holistic_landmarker/holistic_landmarker_graph.cc
+++ b/mediapipe/tasks/cc/vision/holistic_landmarker/holistic_landmarker_graph.cc
@@ -387,6 +387,13 @@ class HolisticLandmarkerGraph : public core::ModelTaskGraph {
             holistic_options->mutable_face_landmarks_detector_graph_options()
                 ->mutable_face_blendshapes_graph_options(),
             kFaceBlendshapesModelName, create_copy));
+        holistic_options->mutable_face_landmarks_detector_graph_options()
+                ->mutable_face_blendshapes_graph_options()
+                ->mutable_base_options()
+                ->mutable_acceleration()
+                ->mutable_xnnpack();
+        ABSL_LOG(WARNING) << "Sets FaceBlendshapesGraph acceleration to xnnpack "
+                          << "by default.";
       }
     }
 
